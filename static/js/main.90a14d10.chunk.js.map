{"version":3,"sources":["services/testData/data.js","utils/sortUtils.js","utils/chartUtils.js","algorithms/selectionSort.js","algorithms/mergeSort.js","algorithms/insertionSort.js","components/common/chart.jsx","components/common/customMenu.jsx","components/sortingPage/sortMenu.jsx","components/common/customSlider.jsx","components/sortingPage/sortOptions.jsx","utils/algorithmUtil.js","algorithms/quickSort.js","components/sortingPage/sortingPage.jsx","algorithms/bubbleSort.js","components/navbar.jsx","App.js","index.js"],"names":["generateData","totalCount","data","count","_id","Math","random","toString","substr","y","floor","x","push","swap","nums","idx1","idx2","temp","record","nodes","snapshots","snapshot","focusNodes","_getFocusNodes","name","length","mapChartData","map","iter","size","color","includes","opacity","item","_selectionSortSmall","start","end","minIdx","i","_selectionSortLarge","_mergeSort","mid","_merge","leftStart","leftEnd","rightStart","rightEnd","leftCurrent","rightCurrent","index","slice","Chart","Grid","container","justify","height","width","window","innerWidth","colorType","colorRange","style","fontSize","fontWeight","labelAnchorX","getLabel","d","CustomMenu","options","onSelect","useState","anchorEl","setAnchorEl","handleClose","Fragment","Button","variant","aria-controls","aria-haspopup","onClick","event","currentTarget","startIcon","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","key","SortMenu","selectedAlgorithm","algorithms","onSetSelectedAlgorithm","onStart","Typography","Box","ml","ValueLabelComponent","props","children","value","Tooltip","enterTouchDelay","title","arrow","placement","CustomSlider","unit","onChange","maxValue","onSubmit","buttonLabel","label","Slider","max","defaultValue","aria-label","SortOptions","onChangeSpeed","speed","dataCount","onChangeDataCount","onSetDataCount","formattedSpeed","toFixed","runAlgorithm","algorithm","a","_quickSort","pivot","_partition","current","sorted","j","SortingPage","setDataCount","setData","setSpeed","setSelectedAlgorithm","timer","setTimer","stopTimer","clearTimeout","reset","xs","sm","_","align","find","then","values","visualize","setTimeout","catch","e","console","log","useStyles","makeStyles","theme","root","flexGrow","marginBottom","spacing","menuButton","Navbar","classes","className","AppBar","position","Toolbar","App","Container","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAaC,GAI3B,IAHA,IAAMC,EAAO,GACTC,EAAQ,EAELA,EAAQF,GAAY,CACzB,IAAMG,EAAM,IAAMC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,GACjDC,EAAIJ,KAAKK,MAAML,KAAKC,SAAWD,KAAKK,MAAMT,IAAe,EACzDU,EAAIR,IACVD,EAAKU,KAAK,CAAER,MAAKO,IAAGF,MAGtB,OAAOP,EAGM,I,QCdFW,EAAO,SAACC,EAAMC,EAAMC,GAC/B,IAAIC,EAAOH,EAAKC,GAGhB,OAFAD,EAAKC,GAAQD,EAAKE,GAClBF,EAAKE,GAAQC,EACNH,GCJII,EAAS,SAAChB,EAAMiB,EAAOC,GAClC,IAAMC,EAAQ,YAAOnB,GACfoB,EAAaC,EAAeJ,GAE5BD,EAAS,CACb,CACEM,KAHM,gBAAYJ,EAAUK,QAI5BJ,WACAC,eAGJ,MAAM,GAAN,mBAAWF,GAAcF,IAGdQ,EAAe,SAACN,GAC3B,OAAOA,EAAUO,KAAI,SAACC,GACpB,IAAIjB,EAAI,EAYR,MAAO,CAAEa,KAXII,EAAKJ,KAWHH,SAVEO,EAAKP,SAASM,KAAI,SAACzB,GAClC,MAAO,CACLE,IAAKF,EAAKE,IACVO,EAAGA,IACHF,EAAGP,EAAKO,EACRoB,KAAM3B,EAAKO,EACXqB,MAAOF,EAAKN,WAAWS,SAAS7B,EAAKE,KAAO,IAAM,IAClD4B,QAASJ,EAAKN,WAAWS,SAAS7B,EAAKE,KAAO,EAAI,YAOpDmB,EAAiB,SAACrB,GACtB,OAAOA,EAAKyB,KAAI,SAACM,GACf,GAAIA,EAAM,OAAOA,EAAK7B,QC/BtBgB,EAAY,GAQVc,EAAsB,SAACpB,GAM3B,IALA,IAAIZ,EAAI,YAAOY,GACXqB,EAAQ,EACRC,EAAMtB,EAAKW,OAAS,EACpBY,EAAS,EAENF,GAASC,GAAK,CACnBC,EAASF,EACT,IAAK,IAAIG,EAAIH,EAAOG,GAAKF,EAAKE,IACxBpC,EAAKoC,GAAG7B,EAAIP,EAAKmC,GAAQ5B,IAAG4B,EAASC,GAEzClB,EAAYF,EAAOhB,EAAM,CAACA,EAAKmC,GAASnC,EAAKoC,GAAIpC,EAAKiC,IAASf,GAEjElB,EAAOW,EAAKX,EAAMiC,EAAOE,GACzBF,IAIF,MAAO,CAAEjC,OAAMkB,UADfA,EAAYF,EAAOhB,EAAMA,EAAMkB,KAI3BmB,EAAsB,SAACzB,GAO3B,IANA,IAAIM,EAAY,GACZlB,EAAI,YAAOY,GACXqB,EAAQ,EACRC,EAAMtB,EAAKW,OAAS,EACpBY,EAAS,EAENF,GAASC,GAAK,CACnBC,EAASF,EAET,IAAK,IAAIG,EAAIH,EAAOG,GAAKF,EAAKE,IACxBpC,EAAKoC,GAAG7B,EAAIP,EAAKmC,GAAQ5B,IAC3B4B,EAASC,EACTlB,EAAYF,EAAOhB,EAAM,CAACA,EAAKiC,GAAO/B,IAAKF,EAAKoC,IAAKlB,IAGzDlB,EAAOW,EAAKX,EAAMiC,EAAOE,GACzBF,IAGF,MAAO,CAAEjC,OAAMkB,UADfA,EAAYF,EAAOhB,EAAMA,EAAMkB,KChD7BA,EAAY,GACZlB,EAAO,GASLsC,EAAa,SAAbA,EAAcL,EAAOC,GACzB,IAAMP,EAAOO,EAAMD,EAAQ,EACrBM,EAAMpC,KAAKK,MAAMyB,GAASC,EAAMD,EAAQ,GAAK,GACnDf,EAAYF,EAAOhB,EAAM,CAACA,EAAKuC,IAAOrB,GAClCS,EAAO,GACTW,EAAWL,EAAOM,GAClBD,EAAWC,EAAM,EAAGL,GACpBM,EAAOP,EAAOM,EAAKA,EAAM,EAAGL,IACV,IAATP,GACL3B,EAAKiC,GAAO1B,EAAIP,EAAKkC,GAAK3B,GAAGI,EAAKX,EAAMiC,EAAOC,GAErDhB,EAAYF,EAAOhB,EAAM,CAACA,EAAKuC,IAAOrB,IAIlCsB,EAAS,SAACC,EAAWC,EAASC,EAAYC,GAM9C,IALA,IAAI7B,EAAO,GACP8B,EAAcJ,EACdK,EAAeH,EACfI,EAAQ,EAELF,GAAeH,GAAWI,GAAgBF,GAC3C5C,EAAK6C,GAAatC,EAAIP,EAAK8C,GAAcvC,GAC3CW,EAAYF,EACVhB,EACA,CAACA,EAAK6C,GAAc7C,EAAK8C,IACzB5B,GAEFH,EAAKgC,GAAS/C,EAAK6C,GACnBA,MAEA3B,EAAYF,EACVhB,EACA,CAACA,EAAK6C,GAAc7C,EAAK8C,IACzB5B,GAEFH,EAAKgC,GAAS/C,EAAK8C,GACnBA,KAEFC,IAIFhC,EAAI,sBACCA,GADD,YAECf,EAAKgD,MAAMH,EAAaH,EAAU,IAFnC,YAGC1C,EAAKgD,MAAMF,EAAcF,EAAW,KAGzCG,EAAQN,EACR,IAAK,IAAIL,EAAI,EAAGA,EAAIrB,EAAKQ,OAAQa,IAC/BpC,EAAK+C,GAAShC,EAAKqB,GACnBW,KC9DA7B,EAAY,G,iBCsBD+B,MArBf,YAA0B,IAATjD,EAAQ,EAARA,KACf,OACE,kBAACkD,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,UACtB,kBAAC,IAAD,CAAQC,OAAQ,IAAKC,MAA2B,IAApBC,OAAOC,WAAmBC,UAAU,UAC9D,kBAAC,IAAD,CAAmBzD,KAAMA,EAAM0D,WAAY,CAAC,WAAY,YACvD1D,EAAKuB,QAAU,GACd,kBAAC,IAAD,CACEoC,MAAO,CACLC,SAAU,SACVC,WAAY,QAEdC,aAAa,SACb9D,KAAMA,EACN+D,SAAU,SAACC,GAAD,OAAOA,EAAEzD,KAEnB,Q,+ECgCG0D,MA/Cf,YAAkD,IAA5BC,EAA2B,EAA3BA,QAAS5C,EAAkB,EAAlBA,KAAM6C,EAAY,EAAZA,SAAY,EACfC,mBAAS,MADM,mBACxCC,EADwC,KAC9BC,EAD8B,KAOzCC,EAAc,WAClBD,EAAY,OAQd,OACE,kBAAC,IAAME,SAAP,KACE,kBAACC,EAAA,EAAD,CACEC,QAAQ,YACR9C,MAAM,UACN+C,gBAAerD,EACfsD,gBAAc,OACdC,QApBc,SAACC,GACnBR,EAAYQ,EAAMC,gBAoBdC,UAAW,kBAAC,IAAD,OAEV1D,GAEH,kBAAC2D,EAAA,EAAD,CACEC,GAAI5D,EACJ+C,SAAUA,EACVc,aAAW,EACXC,KAAMC,QAAQhB,GACdiB,QAASf,GAERL,EAAQzC,KAAI,SAACM,GACZ,OACE,kBAACwD,EAAA,EAAD,CAAUC,IAAKzD,EAAK7B,IAAK2E,QAAS,kBA1BtB3E,EA0ByC6B,EAAK7B,IAzBlEiE,EAASjE,QACTqE,IAFmB,IAACrE,IA2BT6B,EAAKT,YCPLmE,MA9Bf,YAKI,IAJFC,EAIC,EAJDA,kBACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,uBACAC,EACC,EADDA,QAEA,OACE,kBAAC,IAAMrB,SAAP,KACE,kBAACsB,EAAA,EAAD,CAAYpB,QAAQ,MAAMgB,EAAkBpE,MAC5C,kBAAC4B,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,YACtB,kBAAC,EAAD,CACEc,QAASyB,EACTxB,SAAU,SAACjE,GAAD,OAAS0F,EAAuB1F,IAC1CoB,KAAK,cAEP,kBAACyE,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACvB,EAAA,EAAD,CACEC,QAAQ,YACR9C,MAAM,YACNiD,QAASgB,EACTb,UAAW,kBAAC,IAAD,OAJb,a,kBClBV,SAASiB,EAAoBC,GAAQ,IAC3BC,EAA0BD,EAA1BC,SAAUf,EAAgBc,EAAhBd,KAAMgB,EAAUF,EAAVE,MACxB,OACE,kBAACC,EAAA,EAAD,CACEjB,KAAMA,EACNkB,gBAAiB,EACjBC,MAAOH,EACPI,OAAO,EACPC,UAAU,UAETN,GAyCQO,MApCf,YASI,IARFH,EAQC,EARDA,MACAH,EAOC,EAPDA,MACAO,EAMC,EANDA,KACAC,EAKC,EALDA,SACAC,EAIC,EAJDA,SACAC,EAGC,EAHDA,SACAC,EAEC,EAFDA,YACAC,EACC,EADDA,MAEA,OACE,kBAAC9D,EAAA,EAAD,KACGqD,GAAS,kBAACT,EAAA,EAAD,CAAYpB,QAAQ,UAAU6B,GACxC,kBAACrD,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,iBACtB,kBAAC0C,EAAA,EAAD,CAAYpB,QAAQ,MACjBsC,EACAL,GAEFG,GACC,kBAACrC,EAAA,EAAD,CAAQC,QAAQ,YAAY9C,MAAM,UAAUiD,QAASiC,GAClDC,IAIP,kBAACE,EAAA,EAAD,CACEhB,oBAAqBA,EACrBiB,IAAKL,EACLM,aAAcf,EACdA,MAAOA,EACPQ,SAAUA,EACVQ,aAAW,yBCbJC,MAhCf,YAMI,IALFC,EAKC,EALDA,cACAC,EAIC,EAJDA,MACAC,EAGC,EAHDA,UACAC,EAEC,EAFDA,kBACAC,EACC,EADDA,eAGMC,GAAkBJ,EAAQ,KAAMK,QAAQ,GAE9C,OACE,kBAAC,IAAMpD,SAAP,KACE,kBAAC,EAAD,CACE+B,MAAM,sBACNS,MAAOW,EACPd,SANW,IAOXD,SAAUU,EACVlB,MAAOmB,EACPZ,KAAK,MAEP,kBAAC,EAAD,CACEJ,MAAM,aACNM,SAfe,IAgBfD,SAAUa,EACVX,SAAUY,EACVtB,MAAOoB,EACPT,YAAY,Y,yBC3BPc,EAAY,uCAAG,WAAOC,EAAWlH,GAAlB,iBAAAmH,EAAA,+DACJD,EAAUlH,GAAxBM,EADkB,EAClBA,UADkB,kBAEnBM,EAAaN,IAFM,2CAAH,wDCCrBA,EAAY,GASV8G,EAAa,SAAbA,EAAchI,EAAMiC,EAAOC,GAC/B,KAAID,GAASC,GAAb,CAGE,IAAM+F,EAAQjI,EAAKG,KAAKK,OAAOyB,EAAQC,GAAO,IACxCa,EAAQmF,EAAWlI,EAAMiC,EAAOC,EAAK+F,GAC3CD,EAAWhI,EAAMiC,EAAOc,EAAQ,GAChCiF,EAAWhI,EAAM+C,EAAOb,KAItBgG,EAAa,SAAClI,EAAMiC,EAAOC,EAAK+F,GACpC,KAAOhG,GAASC,GAAK,CACnB,KAAOlC,EAAKiC,GAAO1B,EAAI0H,EAAM1H,GAC3B0B,IACAf,EAAYF,EAAOhB,EAAM,CAACA,EAAKiC,GAAQgG,EAAOjI,EAAKkC,IAAOhB,GAE5D,KAAOlB,EAAKkC,GAAK3B,EAAI0H,EAAM1H,GACzB2B,IACAhB,EAAYF,EAAOhB,EAAM,CAACA,EAAKiC,GAAQgG,EAAOjI,EAAKkC,IAAOhB,GAExDe,GAASC,IACXvB,EAAKX,EAAMiC,EAAOC,GAClBhB,EAAYF,EAAOhB,EAAM,CAACA,EAAKiC,GAAQgG,EAAOjI,EAAKkC,IAAOhB,GAC1De,IACAf,EAAYF,EAAOhB,EAAM,CAACA,EAAKiC,GAAQgG,EAAOjI,EAAKkC,IAAOhB,GAC1DgB,IACAhB,EAAYF,EAAOhB,EAAM,CAACA,EAAKiC,GAAQgG,EAAOjI,EAAKkC,IAAOhB,IAG9D,OAAOe,GC7BH0D,EAAa,CACjB,CACEzF,IAAK,cACLoB,KAAM,cACNwG,UCdsB,SAAClH,GAOzB,IANA,IAAIZ,EAAI,YAAOY,GACXM,EAAY,GACZiH,EAAU,EACVjG,EAAMlC,EAAKuB,OAAS,EACpB6G,GAAS,GAELA,GAAQ,CAEd,IADAA,GAAS,EACFD,EAAUjG,GACfhB,EAAYF,EAAOhB,EAAM,CAACA,EAAKmI,GAAUnI,EAAKmI,EAAU,IAAKjH,GACzDlB,EAAKmI,GAAS5H,EAAIP,EAAKmI,EAAU,GAAG5H,IACtCP,EAAOW,EAAKX,EAAMmI,EAASA,EAAU,GACrCC,GAAS,GAEXD,IAEFA,EAAU,EACVjG,IAGF,MAAO,CAAElC,OAAMkB,UADfA,EAAYF,EAAOhB,EAAMA,EAAMkB,MDJ/B,CACEhB,IAAK,iBACLoB,KAAM,iBACNwG,UVjByB,SAAClH,GAC5B,OAAOA,EAAKW,OAAS,IACjBS,EAAoBpB,GACpByB,EAAoBzB,KUgBxB,CACEV,IAAK,iBACLoB,KAAM,iBACNwG,URtByB,SAAClH,GAC5B,IAAIZ,EAAI,YAAOY,GACfM,EAAYF,EAAOhB,EAAMA,EAAMkB,GAC/B,IAAK,IAAIkB,EAAI,EAAGA,EAAIpC,EAAKuB,OAAQa,IAC/B,IAAK,IAAIiG,EAAIjG,EAAGiG,EAAI,EAAGA,IACjBrI,EAAKqI,GAAG9H,EAAIP,EAAKqI,EAAI,GAAG9H,IAC1BP,EAAOW,EAAKX,EAAMqI,EAAGA,EAAI,IAE3BnH,EAAYF,EAAOhB,EAAM,CAACA,EAAKoC,GAAIpC,EAAKqI,GAAIrI,EAAKqI,EAAI,IAAKnH,GAE9D,MAAO,CAAElB,OAAMkB,eQcf,CACEhB,IAAK,aACLoB,KAAM,aACNwG,UT1BqB,SAAClH,GAIxB,OAHAZ,EAAI,YAAOY,GACX0B,EAAW,EAAGtC,EAAKuB,OAAS,GAC5BL,EAAYF,EAAOhB,EAAMA,EAAMkB,GACxB,CAAElB,OAAMkB,eSwBf,CAAEhB,IAAK,aAAcoB,KAAM,aAAcwG,UD9BlB,SAAClH,GACxBM,EAAY,GACZ,IAAIlB,EAAI,YAAOY,GAGf,OAFAoH,EAAWhI,EAAM,EAAGA,EAAKuB,OAAS,GAE3B,CAAEvB,OAAMkB,UADfA,EAAYF,EAAOhB,EAAMA,EAAMkB,OCiHlBoH,MApFf,WAAwB,IAAD,EACalE,mBAAS,IADtB,mBACdoD,EADc,KACHe,EADG,OAEGnE,mBAAStE,EAAa0H,IAFzB,mBAEdxH,EAFc,KAERwI,EAFQ,OAGKpE,mBAAS,KAHd,mBAGdmD,EAHc,KAGPkB,EAHO,OAI6BrE,mBAASuB,EAAW,IAJjD,mBAIdD,EAJc,KAIKgD,EAJL,OAKKtE,mBAAS,GALd,mBAKduE,EALc,KAKPC,EALO,KAmBfC,EAAY,kBAAMC,aAAaH,IAiC/BI,EAAQ,WACZP,EAAQ,IACR,IAAMxI,EAAOF,EAAa0H,GAC1BgB,EAAQxI,IAGV,OACE,kBAAC,IAAMwE,SAAP,KACE,kBAAC,EAAD,CAAOxE,KAAMA,IACb,kBAACkD,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,iBACtB,kBAACF,EAAA,EAAD,CAAMnB,MAAI,EAACiH,GAAI,GAAIC,GAAI,GACrB,kBAAC,EAAD,CACE3B,cAjBgB,SAAC4B,EAAG9C,GAC5ByC,IACAJ,EAASrC,IAgBDmB,MAAOA,EACPC,UAAWA,EACXC,kBArCoB,SAACyB,EAAG9C,GAChCyC,IACAN,EAAanC,IAoCLsB,eAjCiB,WACzBmB,IACAE,QAkCI,kBAAC7F,EAAA,EAAD,CAAMnB,MAAI,EAACoH,MAAM,MAAMH,GAAI,GAAIC,GAAI,GACjC,kBAAC,EAAD,CACEvD,kBAAmBA,EACnBC,WAAYA,EACZC,uBAnCyB,SAAC1F,GAClC2I,IACA,IAAMnD,EAAoBC,EAAWyD,MAAK,SAACrH,GAAD,OAAUA,EAAK7B,MAAQA,KACjEwI,EAAqBhD,GACrBqD,KAgCQlD,QAvDU,WAClBgD,IACAhB,EAAanC,EAAkBoC,UAAW9H,GACvCqJ,MAAK,SAACC,GAAD,OAjBQ,SAAZC,EAAarI,EAAW6B,GAC5ByF,EAAQtH,EAAU6B,GAAO5B,UAEzByH,EACEY,YAAW,WACLzG,EAAQ7B,EAAUK,OAAS,GAC7BgI,EAAUrI,EAAW6B,EAAQ,KAE9BwE,IASegC,CAAUD,EAAQ,MACnCG,OAAM,SAACC,GACNC,QAAQC,IAAIF,a,2BEzDdG,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVC,aAAcH,EAAMI,QAAQ,IAE9BC,WAAY,CACVF,aAAcH,EAAMI,QAAQ,QAIjB,SAASE,GAAT,GAA4B,IAAV9D,EAAS,EAATA,MACzB+D,EAAUT,IAChB,OACE,yBAAKU,UAAWD,EAAQN,MACtB,kBAACQ,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,CAAShG,QAAQ,SACf,kBAACoB,EAAA,EAAD,CAAYpB,QAAQ,KAAK9C,MAAM,WAC5B2E,M,qBCJEoE,OAXf,WACE,OACE,8BACE,kBAAC,GAAD,CAAQpE,MALA,uBAMR,kBAACqE,GAAA,EAAD,KACE,kBAAC,EAAD,SCRRC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.90a14d10.chunk.js","sourcesContent":["export function generateData(totalCount) {\n  const data = [];\n  var count = 0;\n\n  while (count < totalCount) {\n    const _id = \"_\" + Math.random().toString(36).substr(2, 9);\n    const y = Math.floor(Math.random() * Math.floor(totalCount)) + 1;\n    const x = count++;\n    data.push({ _id, x, y });\n  }\n\n  return data;\n}\n\nexport default {\n  generateData,\n};\n","export const swap = (nums, idx1, idx2) => {\n  let temp = nums[idx1];\n  nums[idx1] = nums[idx2];\n  nums[idx2] = temp;\n  return nums;\n};\n\nexport default { swap };\n","export const record = (data, nodes, snapshots) => {\n  const snapshot = [...data];\n  const focusNodes = _getFocusNodes(nodes);\n  const name = `Pass #${snapshots.length}`;\n  const record = [\n    {\n      name,\n      snapshot,\n      focusNodes,\n    },\n  ];\n  return [...snapshots, ...record];\n};\n\nexport const mapChartData = (snapshots) => {\n  return snapshots.map((iter) => {\n    let x = 0;\n    const name = iter.name;\n    const snapshot = iter.snapshot.map((data) => {\n      return {\n        _id: data._id,\n        x: x++,\n        y: data.y,\n        size: data.y,\n        color: iter.focusNodes.includes(data._id) ? 255 : 150,\n        opacity: iter.focusNodes.includes(data._id) ? 1 : 0.5,\n      };\n    });\n    return { name, snapshot };\n  });\n};\n\nconst _getFocusNodes = (data) => {\n  return data.map((item) => {\n    if (item) return item._id;\n  });\n};\n","import { swap } from \"../utils/sortUtils\";\nimport { record } from \"../utils/chartUtils\";\n\nlet snapshots = [];\n\nexport const selectionSort = (nums) => {\n  return nums.length < 100\n    ? _selectionSortSmall(nums)\n    : _selectionSortLarge(nums);\n};\n\nconst _selectionSortSmall = (nums) => {\n  let data = [...nums];\n  let start = 0;\n  let end = nums.length - 1;\n  let minIdx = 0;\n\n  while (start <= end) {\n    minIdx = start;\n    for (let i = start; i <= end; i++) {\n      if (data[i].y < data[minIdx].y) minIdx = i;\n\n      snapshots = record(data, [data[minIdx], data[i], data[start]], snapshots);\n    }\n    data = swap(data, start, minIdx);\n    start++;\n  }\n\n  snapshots = record(data, data, snapshots);\n  return { data, snapshots };\n};\n\nconst _selectionSortLarge = (nums) => {\n  let snapshots = [];\n  let data = [...nums];\n  let start = 0;\n  let end = nums.length - 1;\n  let minIdx = 0;\n\n  while (start <= end) {\n    minIdx = start;\n\n    for (let i = start; i <= end; i++) {\n      if (data[i].y < data[minIdx].y) {\n        minIdx = i;\n        snapshots = record(data, [data[start]._id, data[i]], snapshots);\n      }\n    }\n    data = swap(data, start, minIdx);\n    start++;\n  }\n  snapshots = record(data, data, snapshots);\n  return { data, snapshots };\n};\n","import { record } from \"../utils/chartUtils\";\nimport { swap } from \"../utils/sortUtils\";\n\nlet snapshots = [];\nlet data = [];\n\nexport const mergeSort = (nums) => {\n  data = [...nums];\n  _mergeSort(0, data.length - 1);\n  snapshots = record(data, data, snapshots);\n  return { data, snapshots };\n};\n\nconst _mergeSort = (start, end) => {\n  const size = end - start + 1;\n  const mid = Math.floor(start + (end - start + 1) / 2);\n  snapshots = record(data, [data[mid]], snapshots);\n  if (size > 2) {\n    _mergeSort(start, mid);\n    _mergeSort(mid + 1, end);\n    _merge(start, mid, mid + 1, end);\n  } else if (size === 2) {\n    if (data[start].y > data[end].y) swap(data, start, end);\n  }\n  snapshots = record(data, [data[mid]], snapshots);\n  return;\n};\n\nconst _merge = (leftStart, leftEnd, rightStart, rightEnd) => {\n  let temp = [];\n  let leftCurrent = leftStart;\n  let rightCurrent = rightStart;\n  let index = 0;\n\n  while (leftCurrent <= leftEnd && rightCurrent <= rightEnd) {\n    if (data[leftCurrent].y < data[rightCurrent].y) {\n      snapshots = record(\n        data,\n        [data[leftCurrent], data[rightCurrent]],\n        snapshots\n      );\n      temp[index] = data[leftCurrent];\n      leftCurrent++;\n    } else {\n      snapshots = record(\n        data,\n        [data[leftCurrent], data[rightCurrent]],\n        snapshots\n      );\n      temp[index] = data[rightCurrent];\n      rightCurrent++;\n    }\n    index++;\n  }\n\n  // add remaining values\n  temp = [\n    ...temp,\n    ...data.slice(leftCurrent, leftEnd + 1),\n    ...data.slice(rightCurrent, rightEnd + 1),\n  ];\n\n  index = leftStart;\n  for (let i = 0; i < temp.length; i++) {\n    data[index] = temp[i];\n    index++;\n  }\n\n  return;\n};\n","import { swap } from \"../utils/sortUtils\";\nimport { record } from \"../utils/chartUtils\";\n\nlet snapshots = [];\n\nexport const insertionSort = (nums) => {\n  let data = [...nums];\n  snapshots = record(data, data, snapshots);\n  for (let i = 1; i < data.length; i++)\n    for (let j = i; j > 0; j--) {\n      if (data[j].y < data[j - 1].y) {\n        data = swap(data, j, j - 1);\n      }\n      snapshots = record(data, [data[i], data[j], data[j - 1]], snapshots);\n    }\n  return { data, snapshots };\n};\n","import React from \"react\";\nimport { XYPlot, VerticalBarSeries, LabelSeries } from \"react-vis\";\nimport { Grid } from \"@material-ui/core\";\n\nfunction Chart({ data }) {\n  return (\n    <Grid container justify=\"center\">\n      <XYPlot height={500} width={window.innerWidth * 0.85} colorType=\"linear\">\n        <VerticalBarSeries data={data} colorRange={[\"darkblue\", \"orange\"]} />\n        {data.length <= 30 ? (\n          <LabelSeries\n            style={{\n              fontSize: \"1.5rem\",\n              fontWeight: \"bold\",\n            }}\n            labelAnchorX=\"middle\"\n            data={data}\n            getLabel={(d) => d.y}\n          />\n        ) : null}\n      </XYPlot>\n    </Grid>\n  );\n}\n\nexport default Chart;\n","import React, { useState } from \"react\";\nimport { Menu, MenuItem, Button } from \"@material-ui/core\";\nimport SwapHorizIcon from \"@material-ui/icons/SwapHoriz\";\n\nfunction CustomMenu({ options, name, onSelect }) {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleSelect = (_id) => {\n    onSelect(_id);\n    handleClose();\n  };\n\n  return (\n    <React.Fragment>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        aria-controls={name}\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        startIcon={<SwapHorizIcon />}\n      >\n        {name}\n      </Button>\n      <Menu\n        id={name}\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {options.map((item) => {\n          return (\n            <MenuItem key={item._id} onClick={() => handleSelect(item._id)}>\n              {item.name}\n            </MenuItem>\n          );\n        })}\n      </Menu>\n    </React.Fragment>\n  );\n}\n\nexport default CustomMenu;\n","import React from \"react\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport { Typography, Button, Box, Grid } from \"@material-ui/core\";\nimport CustomMenu from \"../common/customMenu\";\n\nfunction SortMenu({\n  selectedAlgorithm,\n  algorithms,\n  onSetSelectedAlgorithm,\n  onStart,\n}) {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h3\">{selectedAlgorithm.name}</Typography>\n      <Grid container justify=\"flex-end\">\n        <CustomMenu\n          options={algorithms}\n          onSelect={(_id) => onSetSelectedAlgorithm(_id)}\n          name=\"Algorithm\"\n        />\n        <Box ml={1}>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={onStart}\n            startIcon={<PlayCircleOutlineIcon />}\n          >\n            Start\n          </Button>\n        </Box>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default SortMenu;\n","import React from \"react\";\nimport { Slider, Tooltip, Grid, Typography, Button } from \"@material-ui/core\";\n\nfunction ValueLabelComponent(props) {\n  const { children, open, value } = props;\n  return (\n    <Tooltip\n      open={open}\n      enterTouchDelay={0}\n      title={value}\n      arrow={true}\n      placement=\"bottom\"\n    >\n      {children}\n    </Tooltip>\n  );\n}\n\nfunction CustomSlider({\n  title,\n  value,\n  unit,\n  onChange,\n  maxValue,\n  onSubmit,\n  buttonLabel,\n  label,\n}) {\n  return (\n    <Grid>\n      {title && <Typography variant=\"button\">{title}</Typography>}\n      <Grid container justify=\"space-between\">\n        <Typography variant=\"h5\">\n          {label}\n          {unit}\n        </Typography>\n        {onSubmit && (\n          <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\n            {buttonLabel}\n          </Button>\n        )}\n      </Grid>\n      <Slider\n        ValueLabelComponent={ValueLabelComponent}\n        max={maxValue}\n        defaultValue={value}\n        value={value}\n        onChange={onChange}\n        aria-label=\"custom thumb label\"\n      />\n    </Grid>\n  );\n}\n\nexport default CustomSlider;\n","import React from \"react\";\nimport CustomSlider from \"../common/customSlider\";\n\nfunction SortOptions({\n  onChangeSpeed,\n  speed,\n  dataCount,\n  onChangeDataCount,\n  onSetDataCount,\n}) {\n  const maxDataCount = 300;\n  const formattedSpeed = (speed / 1000).toFixed(1);\n  const maxSpeed = 3000;\n  return (\n    <React.Fragment>\n      <CustomSlider\n        title=\"Visualization Speed\"\n        label={formattedSpeed}\n        maxValue={maxSpeed}\n        onChange={onChangeSpeed}\n        value={speed}\n        unit=\"s\"\n      />\n      <CustomSlider\n        title=\"Data Count\"\n        maxValue={maxDataCount}\n        onChange={onChangeDataCount}\n        onSubmit={onSetDataCount}\n        value={dataCount}\n        buttonLabel=\"Reset\"\n      />\n    </React.Fragment>\n  );\n}\n\nexport default SortOptions;\n","import { mapChartData } from \"../utils/chartUtils\";\n\nexport const runAlgorithm = async (algorithm, nums) => {\n  const { snapshots } = algorithm(nums);\n  return mapChartData(snapshots);\n};\n","import { swap } from \"../utils/sortUtils\";\nimport { record } from \"../utils/chartUtils\";\n\nlet snapshots = [];\nexport const quickSort = (nums) => {\n  snapshots = [];\n  let data = [...nums];\n  _quickSort(data, 0, data.length - 1);\n  snapshots = record(data, data, snapshots);\n  return { data, snapshots };\n};\n\nconst _quickSort = (data, start, end) => {\n  if (start >= end) {\n    return;\n  } else {\n    const pivot = data[Math.floor((start + end) / 2)];\n    const index = _partition(data, start, end, pivot);\n    _quickSort(data, start, index - 1);\n    _quickSort(data, index, end);\n  }\n};\n\nconst _partition = (data, start, end, pivot) => {\n  while (start <= end) {\n    while (data[start].y < pivot.y) {\n      start++;\n      snapshots = record(data, [data[start], pivot, data[end]], snapshots);\n    }\n    while (data[end].y > pivot.y) {\n      end--;\n      snapshots = record(data, [data[start], pivot, data[end]], snapshots);\n    }\n    if (start <= end) {\n      swap(data, start, end);\n      snapshots = record(data, [data[start], pivot, data[end]], snapshots);\n      start++;\n      snapshots = record(data, [data[start], pivot, data[end]], snapshots);\n      end--;\n      snapshots = record(data, [data[start], pivot, data[end]], snapshots);\n    }\n  }\n  return start;\n};\n","import React, { useState } from \"react\";\nimport { generateData } from \"../../services/testData/data\";\nimport { bubbleSort } from \"../../algorithms/bubbleSort\";\nimport { selectionSort } from \"../../algorithms/selectionSort\";\nimport { mergeSort } from \"../../algorithms/mergeSort\";\nimport { insertionSort } from \"../../algorithms/insertionSort\";\nimport { Grid } from \"@material-ui/core\";\nimport Chart from \"../common/chart\";\nimport SortMenu from \"../sortingPage/sortMenu\";\nimport SortOptions from \"./sortOptions\";\nimport { runAlgorithm } from \"../../utils/algorithmUtil\";\nimport { quickSort } from \"../../algorithms/quickSort\";\n\nconst algorithms = [\n  {\n    _id: \"bubble_sort\",\n    name: \"Bubble Sort\",\n    algorithm: bubbleSort,\n  },\n  {\n    _id: \"selection_sort\",\n    name: \"Selection Sort\",\n    algorithm: selectionSort,\n  },\n  {\n    _id: \"insertion_sort\",\n    name: \"Insertion Sort\",\n    algorithm: insertionSort,\n  },\n  {\n    _id: \"merge_sort\",\n    name: \"Merge Sort\",\n    algorithm: mergeSort,\n  },\n  { _id: \"quick_sort\", name: \"Quick Sort\", algorithm: quickSort },\n];\n\nfunction SortingPage() {\n  const [dataCount, setDataCount] = useState(10);\n  const [data, setData] = useState(generateData(dataCount));\n  const [speed, setSpeed] = useState(200);\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState(algorithms[4]);\n  const [timer, setTimer] = useState(0);\n\n  const visualize = (snapshots, index) => {\n    setData(snapshots[index].snapshot);\n\n    setTimer(\n      setTimeout(() => {\n        if (index < snapshots.length - 1) {\n          visualize(snapshots, index + 1);\n        }\n      }, speed)\n    );\n  };\n\n  const stopTimer = () => clearTimeout(timer);\n\n  const handleStart = () => {\n    stopTimer();\n    runAlgorithm(selectedAlgorithm.algorithm, data)\n      .then((values) => visualize(values, 0))\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const handleChangeDataCount = (_, value) => {\n    stopTimer();\n    setDataCount(value);\n  };\n\n  const handleSetDataCount = () => {\n    stopTimer();\n    reset();\n  };\n\n  const handleSetSelectedAlgorithm = (_id) => {\n    stopTimer();\n    const selectedAlgorithm = algorithms.find((item) => item._id === _id);\n    setSelectedAlgorithm(selectedAlgorithm);\n    reset();\n  };\n\n  const handleChangeSpeed = (_, value) => {\n    stopTimer();\n    setSpeed(value);\n  };\n\n  const reset = () => {\n    setData([]);\n    const data = generateData(dataCount);\n    setData(data);\n  };\n\n  return (\n    <React.Fragment>\n      <Chart data={data} />\n      <Grid container justify=\"space-between\">\n        <Grid item xs={12} sm={6}>\n          <SortOptions\n            onChangeSpeed={handleChangeSpeed}\n            speed={speed}\n            dataCount={dataCount}\n            onChangeDataCount={handleChangeDataCount}\n            onSetDataCount={handleSetDataCount}\n          />\n        </Grid>\n        <Grid item align=\"end\" xs={12} sm={6}>\n          <SortMenu\n            selectedAlgorithm={selectedAlgorithm}\n            algorithms={algorithms}\n            onSetSelectedAlgorithm={handleSetSelectedAlgorithm}\n            onStart={handleStart}\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default SortingPage;\n","import { swap } from \"../utils/sortUtils\";\nimport { record } from \"../utils/chartUtils\";\n\nexport const bubbleSort = (nums) => {\n  let data = [...nums];\n  let snapshots = [];\n  let current = 0;\n  let end = data.length - 1;\n  let sorted = false;\n\n  while (!sorted) {\n    sorted = true;\n    while (current < end) {\n      snapshots = record(data, [data[current], data[current + 1]], snapshots);\n      if (data[current].y > data[current + 1].y) {\n        data = swap(data, current, current + 1);\n        sorted = false;\n      }\n      current++;\n    }\n    current = 0;\n    end--;\n  }\n  snapshots = record(data, data, snapshots);\n  return { data, snapshots };\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: theme.spacing(2),\n  },\n  menuButton: {\n    marginBottom: theme.spacing(0),\n  },\n}));\n\nexport default function Navbar({ title }) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"sticky\">\n        <Toolbar variant=\"dense\">\n          <Typography variant=\"h6\" color=\"inherit\">\n            {title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport SortingPage from \"./components/sortingPage/sortingPage\";\nimport NavBar from \"./components/navbar\";\nimport { Container } from \"@material-ui/core\";\nimport \"./App.scss\";\n\nconst title = \"algovisualizations\";\n\nfunction App() {\n  return (\n    <main>\n      <NavBar title={title} />\n      <Container>\n        <SortingPage />\n      </Container>\n    </main>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}