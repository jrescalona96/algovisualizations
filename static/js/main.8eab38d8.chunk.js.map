{"version":3,"sources":["services/testData/data.js","algorithms/sort/selectionSort.js","algorithms/sort/insertionSort.js","algorithms/sort/mergeSort.js","algorithms/sort/bubbleSort.js","algorithms/search/linearSearch.js","utils/chartUtils.js","utils/sortUtils.js","algorithms/sort/quickSort.js","algorithms/index.js","context/AlgorithmsContext.js","components/navBar/navBar.jsx","components/homePage/homePage.jsx","context/DataContext.js","components/common/chart/chart.jsx","components/header/header.jsx","components/common/customSlider.jsx","context/ControlsContext.js","components/options/options.jsx","components/algorithmsMenu/algorithmsMenu.jsx","components/common/actionButton/actionButton.jsx","components/controls/controls.jsx","components/sortingPage/sortingPage.jsx","components/common/gridDisplay/gridDisplay.jsx","components/searchingPage/searchingPage.jsx","App.js","index.js"],"names":["generateData","totalCount","data","count","_id","Math","random","toString","substr","y","floor","x","size","push","color","opacity","elevation","snapshots","record","pNodes","sNodes","update","name","length","primaryNodes","_getFocusNodeIds","secondaryNodes","nodes","map","nodeIndex","_getOpacity","iter","includes","_getColor","swap","nums","idx1","idx2","temp","_selectionSortSmall","start","end","minIdx","i","_selectionSortLarge","_insertionSort","j","_mergeSort","mid","_merge","_","range","leftStart","leftEnd","rightStart","rightEnd","leftCurrent","rightCurrent","index","slice","_quickSort","pivot","_partition","pivotIndex","indexOf","_bubbleSort","curr","sorted","_linearSearch","searchItem","String","sort","algorithm","workingData","search","result","AlgorithmsContext","createContext","AlgorithmsProvider","Provider","Consumer","useStyles","makeStyles","theme","root","flexGrow","title","button","marginRight","spacing","textDecoration","NavBar","handleSetSelectedAlgorithm","useContext","baseRoute","classes","className","AppBar","position","Toolbar","variant","to","Typography","Button","onClick","HomePage","props","id","type","DataContext","DataProvider","Chart","hasMinimalData","chartOptions","colorType","colorDomain","colorRange","height","window","innerHeight","width","innerWidth","Grid","container","justify","labelAnchorX","getLabel","d","Header","selectedAlgorithm","ValueLabelComponent","children","open","value","Tooltip","enterTouchDelay","arrow","placement","CustomSlider","unit","onChange","maxValue","onSubmit","buttonLabel","label","style","Slider","max","defaultValue","aria-label","ControlsContext","ControlsProvider","Options","speed","dataCount","handleChangeSpeed","handleChangeDataCount","formattedSpeed","toFixed","speedTitle","dataCountTitle","item","xs","sm","AlgorithmsMenu","algorithms","Container","alignContent","key","fullWidth","ActionButton","icon","isDisabled","disabled","startIcon","bottom","margin","grid","Controls","handleStart","handleReset","timer","isRunning","controls","marginBottom","SortingPage","paperStyle","display","alignItems","justifyContent","maxHeight","overflow","paper0","paper1","backgroundColor","paper2","GridDisplay","paperClass","_getPaperClass","Paper","flexDirection","handleChangeSearchItem","OutlinedInput","App","useState","setDataCount","setData","setSpeed","setTimer","setWorkingData","recordSnapshots","setRecordSnapshots","setSelectedAlgorithm","setSearchItem","resetTimer","clearTimeout","runAlgorithm","mapChartData","resetData","newData","runVisualization","currTimer","setTimeout","dataContext","event","target","algorithmsContext","controlsContext","mapped","exact","path","component","render","from","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8eab38d8.chunk.js","sourcesContent":["export function generateData(totalCount) {\n  const data = [];\n  var count = 0;\n  while (count < totalCount) {\n    const _id = \"_\" + Math.random().toString(36).substr(2, 9);\n    const y = Math.floor(Math.random() * Math.floor(totalCount * 2)) + 1;\n    const x = count++;\n    const size = y;\n    const color = 0;\n    const opacity = 0.8;\n    const elevation = 1;\n    data.push({ _id, x, y, size, color, opacity, elevation });\n  }\n\n  return data;\n}\n\nexport default {\n  generateData,\n};\n","import { swap } from \"../../utils/sortUtils\";\nimport { record } from \"../../utils/chartUtils\";\nimport _ from \"lodash\";\n\nlet snapshots;\n\nexport const selectionSort = ({ workingData }) => {\n  snapshots = [];\n  let data = [...workingData];\n  data.length <= 300 ? _selectionSortSmall(data) : _selectionSortLarge(data);\n  snapshots = record(data, [], _.range(0, data.length), snapshots);\n  return { data, snapshots };\n};\n\nconst _selectionSortSmall = (data) => {\n  let start = 0;\n  let end = data.length - 1;\n  let minIdx = 0;\n  while (start <= end) {\n    minIdx = start;\n    for (let i = start; i <= end; i++) {\n      if (data[i].y < data[minIdx].y) minIdx = i;\n      snapshots = record(data, [minIdx], [i, start], snapshots);\n    }\n    data = swap(data, start, minIdx);\n    start++;\n  }\n};\n\nconst _selectionSortLarge = (data) => {\n  let start = 0;\n  let end = data.length - 1;\n  let minIdx = 0;\n\n  while (start <= end) {\n    snapshots = record(data, [minIdx], [start], snapshots);\n    minIdx = start;\n    for (let i = start; i <= end; i++) {\n      if (data[i].y < data[minIdx].y) {\n        minIdx = i;\n      }\n    }\n    data = swap(data, start, minIdx);\n    start++;\n  }\n};\n","import { swap } from \"../../utils/sortUtils\";\nimport { record } from \"../../utils/chartUtils\";\nimport _ from \"lodash\";\n\nlet snapshots;\n\nexport const insertionSort = ({ workingData }) => {\n  let data = [...workingData];\n  snapshots = [];\n  _insertionSort(data);\n  snapshots = record(data, [], _.range(0, data.length), snapshots);\n  return { data, snapshots };\n};\n\nconst _insertionSort = (data) => {\n  snapshots = record(data, [], [], snapshots);\n  for (let i = 1; i < data.length; i++) {\n    snapshots = record(data, [], [i], snapshots);\n    for (let j = i; j > 0; j--) {\n      if (data[j].y < data[j - 1].y) {\n        snapshots = record(data, [j], [i, j - 1], snapshots);\n        data = swap(data, j, j - 1);\n        snapshots = record(data, [j - 1], [i, j], snapshots);\n      }\n    }\n  }\n};\n","import { record } from \"../../utils/chartUtils\";\nimport { swap } from \"../../utils/sortUtils\";\nimport _ from \"lodash\";\n\nlet snapshots;\n\nexport const mergeSort = ({ workingData }) => {\n  snapshots = [];\n  let data = [...workingData];\n  _mergeSort(data, 0, data.length - 1);\n  snapshots = record(data, [], _.range(0, data.length), snapshots);\n  return { data, snapshots };\n};\n\nconst _mergeSort = (data, start, end) => {\n  const size = end - start + 1;\n  const mid = Math.floor(start + (end - start + 1) / 2);\n  snapshots = record(data, [mid], [], snapshots);\n  if (size > 2) {\n    _mergeSort(data, start, mid);\n    _mergeSort(data, mid + 1, end);\n    _merge(data, start, mid, mid + 1, end);\n    snapshots = record(data, [], _.range(start, end + 1), snapshots);\n  } else if (size === 2) {\n    snapshots = record(data, [start, end], [], snapshots);\n    if (data[start].y > data[end].y) swap(data, start, end);\n    snapshots = record(data, [start], [end], snapshots);\n  }\n};\n\nconst _merge = (data, leftStart, leftEnd, rightStart, rightEnd) => {\n  let temp = [];\n  let leftCurrent = leftStart;\n  let rightCurrent = rightStart;\n  let index = 0;\n\n  while (leftCurrent <= leftEnd && rightCurrent <= rightEnd) {\n    if (data[leftCurrent].y < data[rightCurrent].y) {\n      temp[index] = data[leftCurrent];\n      snapshots = record(\n        data,\n        [leftCurrent, rightCurrent],\n        _.range(leftStart, rightEnd + 1),\n        snapshots\n      );\n      leftCurrent++;\n    } else {\n      snapshots = record(\n        data,\n        [leftCurrent, rightCurrent],\n        _.range(leftStart, rightEnd + 1),\n        snapshots\n      );\n      temp[index] = data[rightCurrent];\n      rightCurrent++;\n    }\n    index++;\n  }\n\n  // add remaining values\n  temp = [\n    ...temp,\n    ...data.slice(leftCurrent, leftEnd + 1),\n    ...data.slice(rightCurrent, rightEnd + 1),\n  ];\n\n  index = leftStart;\n  for (let i = 0; i < temp.length; i++) {\n    data[index] = temp[i];\n    snapshots = record(\n      data,\n      [index],\n      _.range(leftStart, rightEnd + 1),\n      snapshots\n    );\n    index++;\n  }\n};\n","import { swap } from \"../../utils/sortUtils\";\nimport { record } from \"../../utils/chartUtils\";\nimport _ from \"lodash\";\n\nlet snapshots;\n\nexport const bubbleSort = ({ workingData }) => {\n  let data = [...workingData];\n  snapshots = [];\n  _bubbleSort(data);\n  snapshots = record(data, [], _.range(data.length), snapshots);\n  return { data, snapshots };\n};\n\nconst _bubbleSort = (data) => {\n  let curr = 0;\n  let end = data.length - 1;\n  let sorted = false;\n\n  while (!sorted) {\n    sorted = true;\n    while (curr < end) {\n      if (data[curr].y > data[curr + 1].y) {\n        sorted = false;\n        snapshots = record(data, [curr + 1], [curr], snapshots);\n        data = swap(data, curr, curr + 1);\n        snapshots = record(data, [curr], [curr + 1], snapshots);\n      } else {\n        snapshots = record(data, [], [curr, curr + 1], snapshots);\n      }\n      curr++;\n    }\n    curr = 0;\n    end--;\n  }\n};\n","import { record } from \"../../utils/chartUtils\";\nimport _ from \"lodash\";\n\nlet snapshots;\nexport const linearSearch = ({ workingData, searchItem }) => {\n  snapshots = [];\n  const data = [...workingData];\n  const result = _linearSearch(data, searchItem);\n  return { result, snapshots };\n};\n\nconst _linearSearch = (data, searchItem) => {\n  const end = data.length - 1;\n  for (let i = 0; i <= end; i++) {\n    snapshots = record(data, [], [i], snapshots);\n    if (String(searchItem) === String(data[i].y)) {\n      snapshots = record(data, [], [i], snapshots);\n      return true;\n    }\n    snapshots = record(data, [i], [], snapshots);\n  }\n  snapshots = record(data, _.range(data.length), [], snapshots);\n  return false;\n};\n","export const record = (data, pNodes, sNodes, snapshots) => {\n  let update = [...snapshots];\n\n  update.push({\n    name: `Pass #${update.length}`,\n    data: [...data],\n    primaryNodes: _getFocusNodeIds(pNodes, data),\n    secondaryNodes: _getFocusNodeIds(sNodes, data),\n  });\n\n  return update;\n};\n\nconst _getFocusNodeIds = (nodes, data) => {\n  return nodes.map((nodeIndex) => data[nodeIndex]._id);\n};\n\nexport const mapChartData = (snapshots) => {\n  return snapshots.map((iter) => {\n    let x = 0;\n    const { name, data } = iter;\n    const snapshot = data.map((item) => {\n      let record = { ...item };\n      record.x = x++;\n      record.size = item.y;\n      record.elevation = _getColor(item._id, iter);\n      record.color = _getColor(item._id, iter);\n      record.opacity = _getOpacity(item._id, iter);\n      return record;\n    });\n    return { name, data: snapshot };\n  });\n};\n\nconst _getOpacity = (_id, iter) => {\n  const nodes = [...iter.primaryNodes, ...iter.secondaryNodes];\n  return nodes.includes(_id) ? 1 : 0.5;\n};\n\nconst _getColor = (_id, iter) => {\n  const { primaryNodes, secondaryNodes } = iter;\n  //red\n  if (primaryNodes.includes(_id)) return 2;\n  //blue\n  else if (secondaryNodes.includes(_id)) return 1;\n  else return 0; // orange\n};\n","export const swap = (nums, idx1, idx2) => {\n  let temp = nums[idx1];\n  nums[idx1] = nums[idx2];\n  nums[idx2] = temp;\n  return nums;\n};\n\nexport default { swap };\n","import { swap } from \"../../utils/sortUtils\";\nimport { record } from \"../../utils/chartUtils\";\nimport _ from \"lodash\";\n\nlet snapshots = [];\nexport const quickSort = ({ workingData }) => {\n  snapshots = [];\n  let data = [...workingData];\n  _quickSort(data, 0, data.length - 1);\n  snapshots = record(data, [], _.range(0, data.length), snapshots);\n  return { data, snapshots };\n};\n\nconst _quickSort = (data, start, end) => {\n  if (start >= end) {\n    return;\n  } else {\n    const pivot = data[Math.floor((start + end) / 2)];\n    const index = _partition(data, start, end, pivot);\n    _quickSort(data, start, index - 1);\n    _quickSort(data, index, end);\n  }\n};\n\nconst _partition = (data, start, end, pivot) => {\n  let pivotIndex = data.indexOf(pivot);\n  while (start <= end) {\n    pivotIndex = data.indexOf(pivot);\n    snapshots = record(data, [pivotIndex], [start, end], snapshots);\n    while (data[start].y < pivot.y) {\n      start++;\n      snapshots = record(data, [pivotIndex], [start, end], snapshots);\n    }\n    while (data[end].y > pivot.y) {\n      end--;\n      snapshots = record(data, [pivotIndex], [start, end], snapshots);\n    }\n    if (start <= end) {\n      snapshots = record(data, [pivotIndex], [start, end], snapshots);\n      swap(data, start, end);\n      pivotIndex = data.indexOf(pivot);\n      start++;\n      snapshots = record(data, [pivotIndex], [start, end], snapshots);\n      end--;\n    }\n  }\n  return start;\n};\n","import { selectionSort } from \"./sort/selectionSort\";\nimport { insertionSort } from \"./sort/insertionSort\";\nimport { mergeSort } from \"./sort/mergeSort\";\nimport { quickSort } from \"./sort/quickSort\";\nimport { bubbleSort } from \"./sort/bubbleSort\";\nimport { linearSearch } from \"./search/linearSearch\";\nimport { binarySearch } from \"./search/binarySearch\";\n\nexport const sort = [\n  {\n    _id: \"bubble_sort\",\n    name: \"BUBBLE SORT\",\n    algorithm: bubbleSort,\n  },\n  {\n    _id: \"selection_sort\",\n    name: \"SELECTION SORT\",\n    algorithm: selectionSort,\n  },\n  {\n    _id: \"insertion_sort\",\n    name: \"INSERTION SORT\",\n    algorithm: insertionSort,\n  },\n  {\n    _id: \"merge_sort\",\n    name: \"MERGE SORT\",\n    algorithm: mergeSort,\n  },\n  { _id: \"quick_sort\", name: \"QUICK SORT\", algorithm: quickSort },\n];\n\nexport const search = [\n  {\n    _id: \"linear_search\",\n    name: \"LINEAR SEARCH\",\n    algorithm: linearSearch,\n  },\n  // {\n  //   _id: \"binary_search\",\n  //   name: \"BINARY SEARCH\",\n  //   algorithm: binarySearch,\n  // },\n];\n","import { createContext } from \"react\";\n\nconst AlgorithmsContext = createContext();\n\nexport const AlgorithmsProvider = AlgorithmsContext.Provider;\nexport const AlgorithmsConsumer = AlgorithmsContext.Consumer;\n\nexport default AlgorithmsContext;\n","import React, { useContext } from \"react\";\nimport { sort, search } from \"../../algorithms\";\nimport { NavLink } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppBar, Toolbar, Typography, Button } from \"@material-ui/core\";\nimport AlgorithmsContext from \"../../context/AlgorithmsContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: { flexGrow: 1, color: \"white\" },\n  button: {\n    marginRight: theme.spacing(1),\n    textDecoration: \"none\",\n    color: \"white\",\n  },\n}));\n\nfunction NavBar({ title }) {\n  const { handleSetSelectedAlgorithm } = useContext(AlgorithmsContext);\n  const baseRoute = \"/algovisualizations\";\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar variant=\"dense\">\n          <NavLink to={baseRoute} className={classes.title}>\n            <Typography variant=\"h6\" color=\"inherit\">\n              {title}\n            </Typography>\n          </NavLink>\n          <NavLink to={`${baseRoute}/sorting`} className={classes.button}>\n            <Button\n              color=\"inherit\"\n              onClick={() => {\n                handleSetSelectedAlgorithm(sort[0]);\n              }}\n            >\n              Sorting\n            </Button>\n          </NavLink>\n          <NavLink to={`${baseRoute}/searching`} className={classes.button}>\n            <Button\n              color=\"inherit\"\n              onClick={() => {\n                handleSetSelectedAlgorithm(search[0]);\n              }}\n            >\n              Searching\n            </Button>\n          </NavLink>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport { Loader } from \"react-loaders\";\nimport \"./homePage.scss\";\n\nfunction HomePage(props) {\n  return (\n    <div>\n      <Loader id=\"loader\" type=\"ball-pulse-rise\" />\n      <h1 id=\"welcome\">algovisualizations</h1>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import { createContext } from \"react\";\n\nconst DataContext = createContext();\n\nexport const DataProvider = DataContext.Provider;\nexport const DataConsumer = DataContext.Consumer;\n\nexport default DataContext;\n","import React, { useContext } from \"react\";\nimport { XYPlot, VerticalBarSeries, LabelSeries } from \"react-vis\";\nimport { Grid } from \"@material-ui/core\";\nimport DataContext from \"../../../context/DataContext\";\n\nfunction Chart() {\n  const { data } = useContext(DataContext);\n  const hasMinimalData = data.length <= 50;\n  const chartOptions = {\n    colorType: \"category\",\n    colorDomain: [0, 1, 2],\n    colorRange: [\"#3f51b5\", \"orange\", \"red\"],\n    height: window.innerHeight * 0.65,\n    width: window.innerWidth * 0.95,\n  };\n\n  const showDataLabels = () => (\n    <LabelSeries labelAnchorX=\"middle\" data={data} getLabel={(d) => d.y} />\n  );\n\n  return (\n    <Grid container justify=\"center\">\n      <XYPlot {...chartOptions}>\n        <VerticalBarSeries data={data} />\n        {hasMinimalData && showDataLabels()}\n      </XYPlot>\n    </Grid>\n  );\n}\n\nexport default Chart;\n","import React, { useContext } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport AlgorithmsContext from \"../../context/AlgorithmsContext\";\nfunction Header() {\n  const { selectedAlgorithm } = useContext(AlgorithmsContext);\n\n  return (\n    <Typography className=\"chart-header\" variant=\"h3\">\n      {selectedAlgorithm.name ? selectedAlgorithm.name : \"CHOOSE AN ALGORITHM\"}\n    </Typography>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { Slider, Tooltip, Grid, Typography, Button } from \"@material-ui/core\";\n\nfunction ValueLabelComponent(props) {\n  const { children, open, value } = props;\n\n  return (\n    <Tooltip\n      open={open}\n      enterTouchDelay={0}\n      title={value}\n      arrow={true}\n      placement=\"bottom\"\n    >\n      {children}\n    </Tooltip>\n  );\n}\n\nfunction CustomSlider({\n  title,\n  value,\n  unit,\n  onChange,\n  maxValue,\n  onSubmit,\n  buttonLabel,\n  label,\n}) {\n  return (\n    <Grid>\n      {title && (\n        <Typography variant=\"button\" style={{ color: \"#3f51b5\" }}>\n          {title}\n        </Typography>\n      )}\n      <Grid container justify=\"space-between\">\n        <Typography variant=\"h5\">\n          {label}\n          {unit}\n        </Typography>\n        {onSubmit && (\n          <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\n            {buttonLabel}\n          </Button>\n        )}\n      </Grid>\n      <Slider\n        ValueLabelComponent={ValueLabelComponent}\n        max={maxValue}\n        defaultValue={value}\n        value={value}\n        onChange={onChange}\n        aria-label=\"custom thumb label\"\n      />\n    </Grid>\n  );\n}\n\nexport default CustomSlider;\n","import { createContext } from \"react\";\n\nconst ControlsContext = createContext();\n\nexport const ControlsProvider = ControlsContext.Provider;\nexport const ControlsConsumer = ControlsContext.Consumer;\n\nexport default ControlsContext;\n","import React, { useContext } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport CustomSlider from \"../common/customSlider\";\nimport ControlsContext from \"../../context/ControlsContext\";\n\nfunction Options() {\n  const {\n    speed,\n    dataCount,\n    handleChangeSpeed,\n    handleChangeDataCount,\n  } = useContext(ControlsContext);\n\n  const maxDataCount = 120;\n  const formattedSpeed = (speed / 1000).toFixed(2);\n  const maxSpeed = 1500;\n  const speedTitle = `Speed (${formattedSpeed} sec)`;\n  const dataCountTitle = `Count (${dataCount})`;\n\n  return (\n    <Grid container justify=\"center\">\n      <Grid item xs={12} sm={5}>\n        <CustomSlider\n          title={speedTitle}\n          maxValue={maxSpeed}\n          onChange={handleChangeSpeed}\n          value={speed}\n        />\n      </Grid>\n      <Grid item xs={1} />\n      <Grid item xs={12} sm={5}>\n        <CustomSlider\n          title={dataCountTitle}\n          maxValue={maxDataCount}\n          onChange={handleChangeDataCount}\n          value={dataCount}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Options;\n","import React, { useContext } from \"react\";\nimport { Container, Button, Grid } from \"@material-ui/core\";\nimport AlgorithmsContext from \"../../context/AlgorithmsContext\";\n\nfunction AlgorithmsMenu({ algorithms }) {\n  const { selectedAlgorithm, handleSetSelectedAlgorithm } = useContext(\n    AlgorithmsContext\n  );\n\n  return (\n    <Container>\n      <Grid container justify=\"space-evenly\" alignContent=\"center\">\n        {algorithms.map((item) => {\n          const { _id, name } = item;\n          const variant =\n            _id === selectedAlgorithm._id ? \"contained\" : \"outlined\";\n          return (\n            <Grid item xs={12} sm={2} key={_id}>\n              <Button\n                fullWidth\n                variant={variant}\n                color=\"primary\"\n                onClick={() => handleSetSelectedAlgorithm(item)}\n              >\n                {name}\n              </Button>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </Container>\n  );\n}\n\nexport default AlgorithmsMenu;\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\n\nfunction ActionButton({ label, icon, isDisabled, onClick, color }) {\n  return (\n    <Button\n      fullWidth\n      variant=\"contained\"\n      disabled={isDisabled}\n      onClick={onClick}\n      size=\"medium\"\n      startIcon={icon}\n      color={color}\n    >\n      {label}\n    </Button>\n  );\n}\n\nexport default ActionButton;\n","import React, { useContext } from \"react\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport SwapHorizIcon from \"@material-ui/icons/SwapHoriz\";\nimport Options from \"../options/options\";\nimport AlgorithmsMenu from \"../algorithmsMenu/algorithmsMenu\";\nimport ControlsContext from \"../../context/ControlsContext\";\nimport AlgorithmsContext from \"../../context/AlgorithmsContext\";\n\nimport ActionButton from \"../common/actionButton/actionButton\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"fixed\",\n    bottom: theme.spacing(1),\n    margin: theme.spacing(1),\n  },\n  grid: {\n    margin: theme.spacing(1),\n  },\n}));\n\nfunction Controls({ algorithms }) {\n  const { handleStart, handleReset, timer } = useContext(ControlsContext);\n  const { selectedAlgorithm } = useContext(AlgorithmsContext);\n  const classes = useStyles();\n\n  const isRunning = timer !== 0;\n  return (\n    <Container className={classes.root}>\n      <Grid container className={classes.controls} justify=\"center\">\n        <Grid item xs={12} className={classes.grid}>\n          <AlgorithmsMenu algorithms={algorithms} />\n        </Grid>\n        <Grid item xs={12} sm={6} className={classes.grid}>\n          <Options id=\"options\" />\n        </Grid>\n        <Grid item xs={12} sm={2} className={classes.grid}>\n          <ActionButton\n            id=\"startButton\"\n            label=\"start\"\n            isDisabled={!selectedAlgorithm._id || isRunning}\n            onClick={handleStart}\n            icon={<PlayCircleOutlineIcon />}\n            color=\"primary\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={2} className={classes.grid}>\n          <ActionButton\n            id=\"resetButton\"\n            label=\"reset\"\n            isDisabled={false}\n            onClick={handleReset}\n            icon={<SwapHorizIcon />}\n            color=\"secondary\"\n          />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default Controls;\n","import React from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Chart from \"../common/chart/chart\";\nimport Header from \"../header/header\";\nimport Controls from \"../controls/controls\";\nimport { sort } from \"../../algorithms/index\";\nimport \"./sortingPage.scss\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: theme.spacing(0),\n  },\n}));\n\nfunction SortingPage() {\n  const classes = useStyles();\n\n  return (\n    <Container id=\"pageContainer\" className={classes.root}>\n      <Header />\n      <Chart />\n      <Controls algorithms={sort} />\n    </Container>\n  );\n}\n\nexport default SortingPage;\n","import React from \"react\";\nimport { Container, Grid, Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => {\n  const paperStyle = {\n    height: \"2.5rem\",\n    width: \"2.5rem\",\n    margin: theme.spacing(0.5),\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  };\n  return {\n    root: {\n      display: \"flex\",\n      alignItems: \"center\",\n      width: \"100%\",\n      maxHeight: \"65vh\",\n      overflow: \"auto\",\n    },\n    paper0: {\n      ...paperStyle,\n    },\n    paper1: {\n      ...paperStyle,\n      backgroundColor: \"orange\",\n    },\n    paper2: {\n      ...paperStyle,\n      backgroundColor: \"red\",\n    },\n  };\n});\n\nfunction GridDisplay({ data }) {\n  const classes = useStyles();\n  const _getPaperClass = (color) => {\n    const { paper0, paper1, paper2 } = classes;\n    if (color === 0) return paper0;\n    else if (color === 1) return paper1;\n    else return paper2;\n  };\n\n  return (\n    <Container className={classes.root}>\n      <Grid container justify=\"center\">\n        {data.map((item) => {\n          const paperClass = _getPaperClass(item.color);\n          return (\n            <Grid key={item._id} item>\n              <Paper\n                variant=\"elevation\"\n                elevation={item.elevation}\n                className={paperClass}\n              >\n                <h3 className={classes.data}>{item.y}</h3>\n              </Paper>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </Container>\n  );\n}\n\nexport default GridDisplay;\n","import React, { useContext } from \"react\";\nimport DataContext from \"../../context/DataContext\";\nimport { Container, OutlinedInput } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { search } from \"../../algorithms/index\";\nimport Header from \"../header/header\";\nimport Controls from \"../controls/controls\";\nimport GridDisplay from \"../common/gridDisplay/gridDisplay\";\nimport \"./searchingPage.scss\";\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: {\n      flexGrow: 1,\n      marginBottom: theme.spacing(0),\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n  };\n});\n\nfunction SortingPage() {\n  const { data, searchItem, handleChangeSearchItem } = useContext(DataContext);\n  const classes = useStyles();\n  return (\n    <Container id=\"pageContainer\" className={classes.root}>\n      <Header />\n      <OutlinedInput\n        variant=\"outlined\"\n        size=\"small\"\n        margin=\"dense\"\n        defaultValue={searchItem}\n        onChange={handleChangeSearchItem}\n      />\n      <GridDisplay data={data} />\n      <Controls algorithms={search} />\n    </Container>\n  );\n}\n\nexport default SortingPage;\n","import React, { Fragment, useState } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport { generateData } from \"./services/testData/data\";\nimport { mapChartData } from \"./utils/chartUtils\";\n\nimport NavBar from \"./components/navBar/navBar\";\nimport HomePage from \"./components/homePage/homePage\";\nimport SortingPage from \"./components/sortingPage/sortingPage\";\nimport SearchingPage from \"./components/searchingPage/searchingPage\";\n\nimport { DataProvider } from \"./context/DataContext\";\nimport { ControlsProvider } from \"./context/ControlsContext\";\nimport { AlgorithmsProvider } from \"./context/AlgorithmsContext\";\n\nimport \"./App.scss\";\n\nfunction App() {\n  const [dataCount, setDataCount] = useState(20);\n  const [data, setData] = useState(generateData(dataCount));\n  const [speed, setSpeed] = useState(100);\n  const [timer, setTimer] = useState(0);\n  const [workingData, setWorkingData] = useState(data);\n  const [recordSnapshots, setRecordSnapshots] = useState([]);\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState({});\n  const [searchItem, setSearchItem] = useState(data[data.length - 2].y);\n\n  const resetTimer = () => {\n    clearTimeout(timer);\n    setTimer(0);\n  };\n\n  const runAlgorithm = () => {\n    const { snapshots } = selectedAlgorithm.algorithm({\n      workingData,\n      searchItem,\n    });\n    return mapChartData(snapshots);\n  };\n  const resetData = () => {\n    let newData = generateData(dataCount);\n    resetTimer();\n    setWorkingData(newData);\n    setRecordSnapshots([]);\n    setData(newData);\n  };\n\n  const runVisualization = (snapshots, index) => {\n    const currTimer = setTimeout(() => {\n      if (index < snapshots.length - 1) {\n        runVisualization(snapshots, index + 1);\n      } else {\n        resetTimer();\n      }\n    }, speed);\n    setData(snapshots[index].data);\n    setTimer(currTimer);\n  };\n\n  const handleStart = () => {\n    const noSnapshotsRecorded = recordSnapshots.length === 0;\n    if (noSnapshotsRecorded) {\n      const mapped = runAlgorithm();\n      setRecordSnapshots(mapped);\n      runVisualization(mapped, 0);\n    } else {\n      runVisualization(recordSnapshots, 0);\n    }\n  };\n\n  const handleReset = () => {\n    resetTimer();\n    resetData();\n  };\n\n  const handleChangeSpeed = (_, value) => {\n    resetTimer();\n    setSpeed(value);\n  };\n\n  const handleSetSelectedAlgorithm = (algorithm) => {\n    resetTimer();\n    setSelectedAlgorithm(algorithm);\n    setData(workingData);\n    setRecordSnapshots([]);\n  };\n\n  const handleChangeDataCount = (_, value) => {\n    resetData();\n    setRecordSnapshots([]);\n    setDataCount(value);\n  };\n\n  const handleChangeSearchItem = (event) => {\n    resetTimer();\n    const { value } = event.target;\n    setSearchItem(value);\n    setRecordSnapshots([]);\n  };\n\n  const baseRoute = \"/algovisualizations\";\n  const title = \"algovisualizations\";\n\n  const dataContext = {\n    data,\n    searchItem,\n    handleChangeSearchItem,\n  };\n\n  const algorithmsContext = {\n    selectedAlgorithm,\n    handleSetSelectedAlgorithm,\n  };\n\n  const controlsContext = {\n    speed,\n    dataCount,\n    timer,\n    handleChangeSpeed,\n    handleStart,\n    handleChangeDataCount,\n    handleReset,\n  };\n\n  return (\n    <DataProvider value={dataContext}>\n      <ControlsProvider value={controlsContext}>\n        <AlgorithmsProvider value={algorithmsContext}>\n          <Fragment>\n            <NavBar title={title} />\n            <main>\n              <Switch>\n                <Route exact path={baseRoute} component={() => <HomePage />} />\n                <Route\n                  path={`${baseRoute}/searching`}\n                  render={(props) => <SearchingPage {...props} />}\n                />\n                <Route\n                  path={`${baseRoute}/sorting`}\n                  render={(props) => <SortingPage {...props} />}\n                />\n                <Redirect from={`${baseRoute}/*`} to={baseRoute} />\n              </Switch>\n            </main>\n          </Fragment>\n        </AlgorithmsProvider>\n      </ControlsProvider>\n    </DataProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}