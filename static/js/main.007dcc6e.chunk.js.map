{"version":3,"sources":["services/testData/data.js","algorithms/sort/selectionSort.js","algorithms/sort/insertionSort.js","algorithms/sort/mergeSort.js","algorithms/sort/bubbleSort.js","algorithms/search/linearSearch.js","algorithms/search/binarySearch.js","utils/snapshotUtils.js","utils/algorithmUtils.js","algorithms/sort/quickSort.js","algorithms/index.js","context/AlgorithmsContext.js","components/navBar/navBar.jsx","components/homePage/homePage.jsx","context/DataContext.js","components/common/chart/chart.jsx","components/header/header.jsx","components/common/customSlider.jsx","context/ControlsContext.js","components/options/options.jsx","components/algorithmsMenu/algorithmsMenu.jsx","components/common/actionButton/actionButton.jsx","components/controls/controls.jsx","components/sortingPage/sortingPage.jsx","components/common/gridDisplay/gridDisplay.jsx","components/searchingPage/searchingPage.jsx","App.js","index.js"],"names":["generateData","totalCount","data","count","_id","Math","random","toString","substr","y","floor","x","size","push","color","opacity","elevation","snapshots","recordSnapshot","existingSnapshots","pNodes","sNodes","newRecord","_createRecord","primaryNodes","_getFocusNodeIds","secondaryNodes","nodes","map","nodeIndex","_getOpacity","iter","includes","_getColor","swap","nums","idx1","idx2","temp","_selectionSortSmall","start","end","length","minIdx","i","_selectionSortLarge","_insertionSort","j","_mergeSort","mid","_merge","_","range","leftStart","leftEnd","rightStart","rightEnd","leftCurrent","rightCurrent","index","slice","_quickSort","pivot","_partition","pivotIndex","indexOf","_bubbleSort","curr","sorted","_linearSearch","target","_binarySearch","current","sort","name","algorithm","workingData","search","searchItem","Number","result","sortBy","AlgorithmsContext","createContext","AlgorithmsProvider","Provider","Consumer","useStyles","makeStyles","theme","root","flexGrow","title","button","marginRight","spacing","textDecoration","NavBar","handleSetSelectedAlgorithm","useContext","baseRoute","classes","className","AppBar","position","Toolbar","variant","to","Typography","Button","onClick","HomePage","props","id","type","DataContext","DataProvider","Chart","hasMinimalData","chartOptions","colorType","colorDomain","colorRange","height","window","innerHeight","width","innerWidth","Grid","container","justify","labelAnchorX","getLabel","d","Header","selectedAlgorithm","ValueLabelComponent","children","open","value","Tooltip","enterTouchDelay","arrow","placement","CustomSlider","unit","onChange","maxValue","onSubmit","buttonLabel","label","style","Slider","max","defaultValue","aria-label","ControlsContext","ControlsProvider","Options","speed","dataCount","handleChangeSpeed","handleChangeDataCount","formattedSpeed","toFixed","speedTitle","dataCountTitle","item","xs","sm","AlgorithmsMenu","algorithms","isActive","Container","alignContent","key","fullWidth","ActionButton","icon","isDisabled","disabled","startIcon","margin","grid","Controls","handleStart","handleReset","timer","isRunning","controls","marginBottom","SortingPage","paperStyle","display","alignItems","justifyContent","overflow","paper0","paper1","backgroundColor","paper2","GridDisplay","paperClass","_getPaperClass","Paper","flexDirection","input","handleChangeSearchItem","OutlinedInput","inputProps","fontSize","textAlign","padding","fontWeight","App","useState","setDataCount","setData","setSpeed","setTimer","setWorkingData","recordSnapshots","setRecordSnapshots","setSelectedAlgorithm","setSearchItem","runVisualization","currTimer","setTimeout","resetTimer","clearTimeout","resetData","newData","dataContext","event","algorithmsContext","controlsContext","mapped","record","formatSnapshots","exact","path","component","render","from","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.007dcc6e.chunk.js","sourcesContent":["export function generateData(totalCount) {\n  const data = [];\n  var count = 0;\n  while (count < totalCount) {\n    const _id = \"_\" + Math.random().toString(36).substr(2, 9);\n    const y = Math.floor(Math.random() * Math.floor(totalCount * 2)) + 1;\n    const x = count++;\n    const size = y;\n    const color = 0;\n    const opacity = 0.8;\n    const elevation = 1;\n    data.push({ _id, x, y, size, color, opacity, elevation });\n  }\n\n  return data;\n}\n\nexport default {\n  generateData,\n};\n","import { swap } from \"../../utils/algorithmUtils\";\nimport { recordSnapshot } from \"../../utils/snapshotUtils\";\nimport _ from \"lodash\";\n\nlet snapshots;\n\nexport const selectionSort = (workingData) => {\n  snapshots = [];\n  let data = [...workingData];\n  data.length <= 300 ? _selectionSortSmall(data) : _selectionSortLarge(data);\n  recordSnapshot(data, snapshots, [], _.range(0, data.length));\n  return { data, snapshots };\n};\n\nconst _selectionSortSmall = (data) => {\n  let start = 0;\n  let end = data.length - 1;\n  let minIdx = 0;\n  while (start <= end) {\n    minIdx = start;\n    for (let i = start; i <= end; i++) {\n      if (data[i].y < data[minIdx].y) minIdx = i;\n      recordSnapshot(data, snapshots, [minIdx], [i, start]);\n    }\n    swap(data, start, minIdx);\n    start++;\n  }\n};\n\nconst _selectionSortLarge = (data) => {\n  let start = 0;\n  let end = data.length - 1;\n  let minIdx = 0;\n\n  while (start <= end) {\n    recordSnapshot(data, snapshots, [minIdx], [start]);\n    minIdx = start;\n    for (let i = start; i <= end; i++) {\n      if (data[i].y < data[minIdx].y) {\n        minIdx = i;\n      }\n    }\n    swap(data, start, minIdx);\n    start++;\n  }\n};\n","import { swap } from \"../../utils/algorithmUtils\";\nimport { recordSnapshot } from \"../../utils/snapshotUtils\";\nimport _ from \"lodash\";\n\nlet snapshots;\n\nexport const insertionSort = (workingData) => {\n  let data = [...workingData];\n  snapshots = [];\n  _insertionSort(data);\n  recordSnapshot(data, snapshots, [], _.range(0, data.length));\n  return { data, snapshots };\n};\n\nconst _insertionSort = (data) => {\n  recordSnapshot(data, snapshots, [], []);\n  for (let i = 1; i < data.length; i++) {\n    recordSnapshot(data, snapshots, [], [i]);\n    for (let j = i; j > 0; j--) {\n      if (data[j].y < data[j - 1].y) {\n        recordSnapshot(data, snapshots, [j], [i, j - 1]);\n        swap(data, j, j - 1);\n        recordSnapshot(data, snapshots, [j - 1], [i, j]);\n      }\n    }\n  }\n};\n","import { swap } from \"../../utils/algorithmUtils\";\nimport { recordSnapshot } from \"../../utils/snapshotUtils\";\nimport _ from \"lodash\";\n\nlet snapshots;\n\nexport const mergeSort = (workingData) => {\n  snapshots = [];\n  let data = [...workingData];\n  _mergeSort(data, 0, data.length - 1);\n  recordSnapshot(data, snapshots, [], _.range(0, data.length));\n  return { data, snapshots };\n};\n\nconst _mergeSort = (data, start, end) => {\n  const size = end - start + 1;\n  const mid = Math.floor(start + (end - start + 1) / 2);\n  recordSnapshot(data, snapshots, [mid], []);\n  if (size > 2) {\n    _mergeSort(data, start, mid);\n    _mergeSort(data, mid + 1, end);\n    _merge(data, start, mid, mid + 1, end);\n    recordSnapshot(data, snapshots, [], _.range(start, end + 1));\n  } else if (size === 2) {\n    recordSnapshot(data, snapshots, [start, end], []);\n    if (data[start].y > data[end].y) {\n      swap(data, start, end);\n    }\n    recordSnapshot(data, snapshots, [start], [end]);\n  }\n};\n\nconst _merge = (data, leftStart, leftEnd, rightStart, rightEnd) => {\n  let temp = [];\n  let leftCurrent = leftStart;\n  let rightCurrent = rightStart;\n  let index = 0;\n\n  while (leftCurrent <= leftEnd && rightCurrent <= rightEnd) {\n    if (data[leftCurrent].y < data[rightCurrent].y) {\n      temp[index] = data[leftCurrent];\n      recordSnapshot(\n        data,\n        snapshots,\n        [leftCurrent, rightCurrent],\n        _.range(leftStart, rightEnd + 1)\n      );\n      leftCurrent++;\n    } else {\n      recordSnapshot(\n        data,\n        snapshots,\n        [leftCurrent, rightCurrent],\n        _.range(leftStart, rightEnd + 1)\n      );\n      temp[index] = data[rightCurrent];\n      rightCurrent++;\n    }\n    index++;\n  }\n\n  temp = [\n    ...temp,\n    ...data.slice(leftCurrent, leftEnd + 1),\n    ...data.slice(rightCurrent, rightEnd + 1),\n  ];\n\n  index = leftStart;\n  for (let i = 0; i < temp.length; i++) {\n    data[index] = temp[i];\n    recordSnapshot(data, snapshots, [index], _.range(leftStart, rightEnd + 1));\n    index++;\n  }\n};\n","import { swap } from \"../../utils/algorithmUtils\";\nimport { recordSnapshot } from \"../../utils/snapshotUtils\";\nimport _ from \"lodash\";\n\nlet snapshots;\n\nexport const bubbleSort = (workingData) => {\n  let data = [...workingData];\n  snapshots = [];\n  _bubbleSort(data);\n  recordSnapshot(data, snapshots, [], _.range(data.length));\n  return { data, snapshots };\n};\n\nconst _bubbleSort = (data) => {\n  let curr = 0;\n  let end = data.length - 1;\n  let sorted = false;\n\n  while (!sorted) {\n    sorted = true;\n    while (curr < end) {\n      if (data[curr].y > data[curr + 1].y) {\n        sorted = false;\n        recordSnapshot(data, snapshots, [curr + 1], [curr]);\n        swap(data, curr, curr + 1);\n        recordSnapshot(data, snapshots, [curr], [curr + 1]);\n      } else {\n        recordSnapshot(data, snapshots, [], [curr, curr + 1]);\n      }\n      curr++;\n    }\n    curr = 0;\n    end--;\n  }\n};\n","import { recordSnapshot } from \"../../utils/snapshotUtils\";\nimport _ from \"lodash\";\n\nlet snapshots;\nexport const linearSearch = (nums, searchItem) => {\n  snapshots = [];\n  const target = Number(searchItem);\n  const result = _linearSearch(nums, target);\n  return { result, snapshots };\n};\n\nconst _linearSearch = (nums, target) => {\n  const end = nums.length - 1;\n  for (let i = 0; i <= end; i++) {\n    recordSnapshot(nums, snapshots, _.range(i), [i]);\n    let current = nums[i].y;\n    if (target === current) {\n      recordSnapshot(nums, snapshots, _.range(i), [i]);\n      return true;\n    }\n    recordSnapshot(nums, snapshots, [..._.range(i), ...[i]], []);\n  }\n  recordSnapshot(nums, snapshots, _.range(nums.length), []);\n  return false;\n};\n","import { recordSnapshot } from \"../../utils/snapshotUtils\";\nimport _ from \"lodash\";\nlet snapshots;\n\nexport const binarySearch = (nums, searchItem) => {\n  snapshots = [];\n  recordSnapshot(nums, snapshots, _.range(nums.length), []);\n  const sorted = _.sortBy(nums, \"y\");\n  const target = Number(searchItem);\n  const result = _binarySearch(sorted, target);\n  return { result, snapshots };\n};\n\nconst _binarySearch = (nums, target) => {\n  let start = 0;\n  let end = nums.length - 1;\n  while (start <= end) {\n    let mid = Math.floor(start + (end - start) / 2);\n    let current = nums[mid].y;\n    recordSnapshot(nums, snapshots, [mid], _.range(start, end + 1));\n    if (target === current) {\n      recordSnapshot(nums, snapshots, [], [mid]);\n      return true;\n    }\n    if (target > current) {\n      start = mid + 1;\n    } else {\n      end = mid - 1;\n    }\n    recordSnapshot(nums, snapshots, [], _.range(start, end + 1));\n  }\n  recordSnapshot(nums, snapshots, [], []);\n  return false;\n};\n","export const formatSnapshots = (snapshots) => {\n  return snapshots.map((iter) => {\n    let x = 0;\n    const { data } = iter;\n    const snapshot = data.map((item) => {\n      let record = { ...item };\n      record.x = x++;\n      record.size = item.y;\n      record.elevation = _getColor(item._id, iter);\n      record.color = _getColor(item._id, iter);\n      record.opacity = _getOpacity(item._id, iter);\n      return record;\n    });\n    return { data: snapshot };\n  });\n};\n\nexport const recordSnapshot = (data, existingSnapshots, pNodes, sNodes) => {\n  const newRecord = _createRecord(data, pNodes, sNodes);\n  existingSnapshots.push(newRecord);\n};\n\nconst _createRecord = (data, pNodes, sNodes) => {\n  return {\n    data: [...data],\n    primaryNodes: _getFocusNodeIds(pNodes, data),\n    secondaryNodes: _getFocusNodeIds(sNodes, data),\n  };\n};\n\nconst _getFocusNodeIds = (nodes, data) => {\n  return nodes.map((nodeIndex) => data[nodeIndex]._id);\n};\n\nconst _getOpacity = (_id, iter) => {\n  const nodes = [...iter.primaryNodes, ...iter.secondaryNodes];\n  return nodes.includes(_id) ? 1 : 0.5;\n};\n\nconst _getColor = (_id, iter) => {\n  const { primaryNodes, secondaryNodes } = iter;\n  if (primaryNodes.includes(_id)) return 2;\n  else if (secondaryNodes.includes(_id)) return 1;\n  else return 0;\n};\n","export const swap = (nums, idx1, idx2) => {\n  let temp = nums[idx1];\n  nums[idx1] = nums[idx2];\n  nums[idx2] = temp;\n};\n\nexport default { swap };\n","import { swap } from \"../../utils/algorithmUtils\";\nimport { recordSnapshot } from \"../../utils/snapshotUtils\";\nimport _ from \"lodash\";\n\nlet snapshots = [];\nexport const quickSort = (workingData) => {\n  snapshots = [];\n  let data = [...workingData];\n  _quickSort(data, 0, data.length - 1);\n  recordSnapshot(data, snapshots, [], _.range(0, data.length));\n  return { data, snapshots };\n};\n\nconst _quickSort = (data, start, end) => {\n  if (start >= end) {\n    return;\n  } else {\n    const pivot = data[Math.floor((start + end) / 2)];\n    const index = _partition(data, start, end, pivot);\n    _quickSort(data, start, index - 1);\n    _quickSort(data, index, end);\n  }\n};\n\nconst _partition = (data, start, end, pivot) => {\n  let pivotIndex = data.indexOf(pivot);\n  while (start <= end) {\n    pivotIndex = data.indexOf(pivot);\n    recordSnapshot(data, snapshots, [pivotIndex], [start, end]);\n    while (data[start].y < pivot.y) {\n      start++;\n      recordSnapshot(data, snapshots, [pivotIndex], [start, end]);\n    }\n    while (data[end].y > pivot.y) {\n      end--;\n      recordSnapshot(data, snapshots, [pivotIndex], [start, end]);\n    }\n    if (start <= end) {\n      recordSnapshot(data, snapshots, [pivotIndex], [start, end]);\n      swap(data, start, end);\n      pivotIndex = data.indexOf(pivot);\n      start++;\n      recordSnapshot(data, snapshots, [pivotIndex], [start, end]);\n      end--;\n    }\n  }\n  return start;\n};\n","import { selectionSort } from \"./sort/selectionSort\";\nimport { insertionSort } from \"./sort/insertionSort\";\nimport { mergeSort } from \"./sort/mergeSort\";\nimport { quickSort } from \"./sort/quickSort\";\nimport { bubbleSort } from \"./sort/bubbleSort\";\nimport { linearSearch } from \"./search/linearSearch\";\nimport { binarySearch } from \"./search/binarySearch\";\n\nexport const sort = [\n  {\n    _id: \"bubble_sort\",\n    name: \"BUBBLE SORT\",\n    algorithm: bubbleSort,\n  },\n  {\n    _id: \"selection_sort\",\n    name: \"SELECTION SORT\",\n    algorithm: selectionSort,\n  },\n  {\n    _id: \"insertion_sort\",\n    name: \"INSERTION SORT\",\n    algorithm: insertionSort,\n  },\n  {\n    _id: \"merge_sort\",\n    name: \"MERGE SORT\",\n    algorithm: mergeSort,\n  },\n  { _id: \"quick_sort\", name: \"QUICK SORT\", algorithm: quickSort },\n];\n\nexport const search = [\n  {\n    _id: \"linear_search\",\n    name: \"LINEAR SEARCH\",\n    algorithm: linearSearch,\n  },\n  {\n    _id: \"binary_search\",\n    name: \"BINARY SEARCH\",\n    algorithm: binarySearch,\n  },\n];\n","import { createContext } from \"react\";\n\nconst AlgorithmsContext = createContext();\n\nexport const AlgorithmsProvider = AlgorithmsContext.Provider;\nexport const AlgorithmsConsumer = AlgorithmsContext.Consumer;\n\nexport default AlgorithmsContext;\n","import React, { useContext } from \"react\";\nimport { sort, search } from \"../../algorithms\";\nimport { NavLink } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppBar, Toolbar, Typography, Button } from \"@material-ui/core\";\nimport AlgorithmsContext from \"../../context/AlgorithmsContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: { flexGrow: 1, color: \"white\" },\n  button: {\n    marginRight: theme.spacing(1),\n    textDecoration: \"none\",\n    color: \"white\",\n  },\n}));\n\nfunction NavBar({ title }) {\n  const { handleSetSelectedAlgorithm } = useContext(AlgorithmsContext);\n  const baseRoute = \"/algovisualizations\";\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar variant=\"dense\">\n          <NavLink to={baseRoute} className={classes.title}>\n            <Typography variant=\"h6\" color=\"inherit\">\n              {title}\n            </Typography>\n          </NavLink>\n          <NavLink to={`${baseRoute}/sorting`} className={classes.button}>\n            <Button\n              color=\"inherit\"\n              onClick={() => {\n                handleSetSelectedAlgorithm(sort[0]);\n              }}\n            >\n              Sorting\n            </Button>\n          </NavLink>\n          <NavLink to={`${baseRoute}/searching`} className={classes.button}>\n            <Button\n              color=\"inherit\"\n              onClick={() => {\n                handleSetSelectedAlgorithm(search[0]);\n              }}\n            >\n              Searching\n            </Button>\n          </NavLink>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport { Loader } from \"react-loaders\";\nimport \"./homePage.scss\";\n\nfunction HomePage(props) {\n  return (\n    <div>\n      <Loader id=\"loader\" type=\"ball-pulse-rise\" />\n      <h1 id=\"welcome\">algovisualizations</h1>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import { createContext } from \"react\";\n\nconst DataContext = createContext();\n\nexport const DataProvider = DataContext.Provider;\nexport const DataConsumer = DataContext.Consumer;\n\nexport default DataContext;\n","import React, { useContext } from \"react\";\nimport { XYPlot, VerticalBarSeries, LabelSeries } from \"react-vis\";\nimport { Grid } from \"@material-ui/core\";\nimport DataContext from \"../../../context/DataContext\";\n\nfunction Chart() {\n  const { data } = useContext(DataContext);\n  const hasMinimalData = data.length <= 50;\n  const chartOptions = {\n    colorType: \"category\",\n    colorDomain: [0, 1, 2, 3],\n    colorRange: [\"#3f51b5\", \"orange\", \"red\", \"green\"],\n    height: window.innerHeight * 0.65,\n    width: window.innerWidth * 0.95,\n  };\n\n  const showDataLabels = () => (\n    <LabelSeries labelAnchorX=\"middle\" data={data} getLabel={(d) => d.y} />\n  );\n\n  return (\n    <Grid container justify=\"center\">\n      <XYPlot {...chartOptions}>\n        <VerticalBarSeries data={data} />\n        {hasMinimalData && showDataLabels()}\n      </XYPlot>\n    </Grid>\n  );\n}\n\nexport default Chart;\n","import React, { useContext } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport AlgorithmsContext from \"../../context/AlgorithmsContext\";\nfunction Header() {\n  const { selectedAlgorithm } = useContext(AlgorithmsContext);\n\n  return (\n    <Typography className=\"chart-header\" variant=\"h3\">\n      {selectedAlgorithm.name ? selectedAlgorithm.name : \"CHOOSE AN ALGORITHM\"}\n    </Typography>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { Slider, Tooltip, Grid, Typography, Button } from \"@material-ui/core\";\n\nfunction ValueLabelComponent(props) {\n  const { children, open, value } = props;\n\n  return (\n    <Tooltip\n      open={open}\n      enterTouchDelay={0}\n      title={value}\n      arrow={true}\n      placement=\"bottom\"\n    >\n      {children}\n    </Tooltip>\n  );\n}\n\nfunction CustomSlider({\n  title,\n  value,\n  unit,\n  onChange,\n  maxValue,\n  onSubmit,\n  buttonLabel,\n  label,\n}) {\n  return (\n    <Grid>\n      {title && (\n        <Typography variant=\"button\" style={{ color: \"#3f51b5\" }}>\n          {title}\n        </Typography>\n      )}\n      <Grid container justify=\"space-between\">\n        <Typography variant=\"h5\">\n          {label}\n          {unit}\n        </Typography>\n        {onSubmit && (\n          <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\n            {buttonLabel}\n          </Button>\n        )}\n      </Grid>\n      <Slider\n        ValueLabelComponent={ValueLabelComponent}\n        max={maxValue}\n        defaultValue={value}\n        value={value}\n        onChange={onChange}\n        aria-label=\"custom thumb label\"\n      />\n    </Grid>\n  );\n}\n\nexport default CustomSlider;\n","import { createContext } from \"react\";\n\nconst ControlsContext = createContext();\n\nexport const ControlsProvider = ControlsContext.Provider;\nexport const ControlsConsumer = ControlsContext.Consumer;\n\nexport default ControlsContext;\n","import React, { useContext } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport CustomSlider from \"../common/customSlider\";\nimport ControlsContext from \"../../context/ControlsContext\";\n\nfunction Options() {\n  const {\n    speed,\n    dataCount,\n    handleChangeSpeed,\n    handleChangeDataCount,\n  } = useContext(ControlsContext);\n\n  const maxDataCount = 200;\n  const formattedSpeed = (speed / 1000).toFixed(2);\n  const maxSpeed = 1500;\n  const speedTitle = `Speed (${formattedSpeed}s)`;\n  const dataCountTitle = `Count (${dataCount})`;\n\n  return (\n    <Grid container justify=\"space-evenly\">\n      <Grid item xs={12} sm={5}>\n        <CustomSlider\n          title={speedTitle}\n          maxValue={maxSpeed}\n          onChange={handleChangeSpeed}\n          value={speed}\n        />\n      </Grid>\n      <Grid item xs={12} sm={5}>\n        <CustomSlider\n          title={dataCountTitle}\n          maxValue={maxDataCount}\n          onChange={handleChangeDataCount}\n          value={dataCount}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Options;\n","import React, { useContext } from \"react\";\nimport { Container, Button, Grid } from \"@material-ui/core\";\nimport AlgorithmsContext from \"../../context/AlgorithmsContext\";\n\nfunction AlgorithmsMenu({ algorithms }) {\n  const { selectedAlgorithm, handleSetSelectedAlgorithm } = useContext(\n    AlgorithmsContext\n  );\n\n  const isActive = (_id) => _id === selectedAlgorithm._id;\n\n  return (\n    <Container>\n      <Grid container justify=\"space-evenly\" alignContent=\"center\">\n        {algorithms.map((item) => {\n          const { _id, name } = item;\n          const variant = isActive(_id) ? \"contained\" : \"outlined\";\n          return (\n            <Grid item xs={12} sm={2} key={_id}>\n              <Button\n                fullWidth\n                variant={variant}\n                size=\"small\"\n                color={isActive(_id) ? \"primary\" : \"default\"}\n                onClick={() => handleSetSelectedAlgorithm(item)}\n              >\n                {name}\n              </Button>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </Container>\n  );\n}\n\nexport default AlgorithmsMenu;\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\n\nfunction ActionButton({ label, icon, isDisabled, onClick, color }) {\n  return (\n    <Button\n      fullWidth\n      variant=\"contained\"\n      disabled={isDisabled}\n      onClick={onClick}\n      size=\"medium\"\n      startIcon={icon}\n      color={color}\n    >\n      {label}\n    </Button>\n  );\n}\n\nexport default ActionButton;\n","import React, { useContext } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport SwapHorizIcon from \"@material-ui/icons/SwapHoriz\";\nimport Options from \"../options/options\";\nimport AlgorithmsMenu from \"../algorithmsMenu/algorithmsMenu\";\nimport ControlsContext from \"../../context/ControlsContext\";\nimport AlgorithmsContext from \"../../context/AlgorithmsContext\";\n\nimport ActionButton from \"../common/actionButton/actionButton\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(0),\n  },\n  grid: {\n    margin: theme.spacing(1),\n  },\n}));\n\nfunction Controls({ algorithms }) {\n  const { handleStart, handleReset, timer } = useContext(ControlsContext);\n  const { selectedAlgorithm } = useContext(AlgorithmsContext);\n  const classes = useStyles();\n\n  const isRunning = timer !== 0;\n  return (\n    <Grid container className={classes.controls} justify=\"space-evenly\">\n      <Grid item xs={12} className={classes.grid}>\n        <AlgorithmsMenu algorithms={algorithms} />\n      </Grid>\n      <Grid item xs={12} sm={6} className={classes.grid}>\n        <Options id=\"options\" />\n      </Grid>\n      <Grid item xs={12} sm={2} className={classes.grid}>\n        <ActionButton\n          id=\"startButton\"\n          label=\"start\"\n          isDisabled={!selectedAlgorithm._id || isRunning}\n          onClick={handleStart}\n          icon={<PlayCircleOutlineIcon />}\n          color=\"primary\"\n        />\n      </Grid>\n      <Grid item xs={12} sm={2} className={classes.grid}>\n        <ActionButton\n          id=\"resetButton\"\n          label=\"reset\"\n          isDisabled={false}\n          onClick={handleReset}\n          icon={<SwapHorizIcon />}\n          color=\"secondary\"\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Controls;\n","import React from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Chart from \"../common/chart/chart\";\nimport Header from \"../header/header\";\nimport Controls from \"../controls/controls\";\nimport { sort } from \"../../algorithms/index\";\nimport \"./sortingPage.scss\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: theme.spacing(0),\n  },\n}));\n\nfunction SortingPage() {\n  const classes = useStyles();\n\n  return (\n    <Container id=\"pageContainer\" className={classes.root}>\n      <Header />\n      <Chart />\n      <Controls algorithms={sort} />\n    </Container>\n  );\n}\n\nexport default SortingPage;\n","import React from \"react\";\nimport { Container, Grid, Paper, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => {\n  const paperStyle = {\n    height: \"2.5rem\",\n    width: \"2.5rem\",\n    margin: theme.spacing(0.5),\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  };\n  return {\n    root: {\n      display: \"flex\",\n      alignItems: \"center\",\n      width: \"100%\",\n      height: \"55vh\",\n      overflow: \"auto\",\n    },\n    paper0: {\n      ...paperStyle,\n    },\n    paper1: {\n      ...paperStyle,\n      backgroundColor: \"orange\",\n    },\n    paper2: {\n      ...paperStyle,\n      backgroundColor: \"red\",\n    },\n  };\n});\n\nfunction GridDisplay({ data }) {\n  const classes = useStyles();\n  const _getPaperClass = (color) => {\n    const { paper0, paper1, paper2 } = classes;\n    if (color === 0) return paper0;\n    else if (color === 1) return paper1;\n    else return paper2;\n  };\n\n  return (\n    <Container className={classes.root}>\n      <Grid container justify=\"center\">\n        {data.length > 0 ? (\n          data.map((item) => {\n            const paperClass = _getPaperClass(item.color);\n            return (\n              <Grid key={item._id} item>\n                <Paper\n                  variant=\"elevation\"\n                  elevation={item.elevation}\n                  className={paperClass}\n                >\n                  <h3 className={classes.data}>{item.y}</h3>\n                </Paper>\n              </Grid>\n            );\n          })\n        ) : (\n          <Typography className=\"chart-header\" variant=\"h5\">\n            NO DATA TO PROCESS\n          </Typography>\n        )}\n      </Grid>\n    </Container>\n  );\n}\n\nexport default GridDisplay;\n","import React, { useContext } from \"react\";\nimport DataContext from \"../../context/DataContext\";\nimport { Container, OutlinedInput, Paper, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { search } from \"../../algorithms/index\";\nimport Header from \"../header/header\";\nimport Controls from \"../controls/controls\";\nimport GridDisplay from \"../common/gridDisplay/gridDisplay\";\nimport \"./searchingPage.scss\";\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: {\n      flexGrow: 1,\n      marginBottom: theme.spacing(0),\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    input: {\n      margin: \"auto\",\n      width: \"5rem\",\n    },\n  };\n});\n\nfunction SortingPage() {\n  const { data, searchItem, handleChangeSearchItem } = useContext(DataContext);\n  const classes = useStyles();\n  return (\n    <Container id=\"pageContainer\" className={classes.root}>\n      <Header />\n      <GridDisplay data={data} />\n      <Paper className={classes.input}>\n        <OutlinedInput\n          inputProps={{\n            style: {\n              fontSize: \"1.2rem\",\n              textAlign: \"center\",\n              padding: \"0.5rem\",\n              fontWeight: \"bold\",\n            },\n          }}\n          size=\"small\"\n          defaultValue={searchItem}\n          onChange={handleChangeSearchItem}\n        />\n      </Paper>\n      <Typography variant=\"button\">Search Item</Typography>\n      <Controls algorithms={search} />\n    </Container>\n  );\n}\n\nexport default SortingPage;\n","import React, { Fragment, useState } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport { generateData } from \"./services/testData/data\";\nimport { formatSnapshots } from \"./utils/snapshotUtils\";\n\nimport NavBar from \"./components/navBar/navBar\";\nimport HomePage from \"./components/homePage/homePage\";\nimport SortingPage from \"./components/sortingPage/sortingPage\";\nimport SearchingPage from \"./components/searchingPage/searchingPage\";\n\nimport { DataProvider } from \"./context/DataContext\";\nimport { ControlsProvider } from \"./context/ControlsContext\";\nimport { AlgorithmsProvider } from \"./context/AlgorithmsContext\";\n\nimport \"./App.scss\";\n\nfunction App() {\n  const [dataCount, setDataCount] = useState(20);\n  const [data, setData] = useState(generateData(dataCount));\n  const [speed, setSpeed] = useState(100);\n  const [timer, setTimer] = useState(0);\n  const [workingData, setWorkingData] = useState(data);\n  const [recordSnapshots, setRecordSnapshots] = useState([]);\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState({});\n  const [searchItem, setSearchItem] = useState(0);\n\n  const runAlgorithm = () => {\n    const { snapshots } = selectedAlgorithm.algorithm(workingData, searchItem);\n    return snapshots;\n  };\n\n  const runVisualization = (snapshots, index) => {\n    const currTimer = setTimeout(() => {\n      if (index < snapshots.length - 1) {\n        runVisualization(snapshots, index + 1);\n      } else {\n        resetTimer();\n      }\n    }, speed);\n    setData(snapshots[index].data);\n    setTimer(currTimer);\n  };\n\n  const resetTimer = () => {\n    clearTimeout(timer);\n    setTimer(0);\n  };\n\n  const resetData = () => {\n    let newData = generateData(dataCount);\n    resetTimer();\n    setRecordSnapshots([]);\n    setData(newData);\n    setWorkingData(newData);\n  };\n\n  const handleStart = () => {\n    const noSnapshotsRecorded = recordSnapshots.length === 0;\n    if (noSnapshotsRecorded) {\n      const snapshots = runAlgorithm();\n      const mapped = formatSnapshots(snapshots);\n      setRecordSnapshots(mapped);\n      runVisualization(mapped, 0);\n    } else {\n      runVisualization(recordSnapshots, 0);\n    }\n  };\n\n  const handleReset = () => {\n    resetTimer();\n    resetData();\n  };\n\n  const handleChangeSpeed = (_, value) => {\n    resetTimer();\n    setSpeed(value);\n  };\n\n  const handleSetSelectedAlgorithm = (algorithm) => {\n    resetTimer();\n    setSelectedAlgorithm(algorithm);\n    setData(workingData);\n    setRecordSnapshots([]);\n  };\n\n  const handleChangeDataCount = (_, value) => {\n    resetData();\n    setRecordSnapshots([]);\n    setDataCount(value);\n  };\n\n  const handleChangeSearchItem = (event) => {\n    resetTimer();\n    const { value } = event.target;\n    setSearchItem(value);\n    setRecordSnapshots([]);\n  };\n\n  const baseRoute = \"/algovisualizations\";\n  const title = \"algovisualizations\";\n\n  const dataContext = {\n    data,\n    searchItem,\n    handleChangeSearchItem,\n  };\n\n  const algorithmsContext = {\n    selectedAlgorithm,\n    handleSetSelectedAlgorithm,\n  };\n\n  const controlsContext = {\n    speed,\n    dataCount,\n    timer,\n    handleChangeSpeed,\n    handleStart,\n    handleChangeDataCount,\n    handleReset,\n  };\n\n  return (\n    <DataProvider value={dataContext}>\n      <ControlsProvider value={controlsContext}>\n        <AlgorithmsProvider value={algorithmsContext}>\n          <Fragment>\n            <NavBar title={title} />\n            <main>\n              <Switch>\n                <Route exact path={baseRoute} component={() => <HomePage />} />\n                <Route\n                  path={`${baseRoute}/searching`}\n                  render={(props) => <SearchingPage {...props} />}\n                />\n                <Route\n                  path={`${baseRoute}/sorting`}\n                  render={(props) => <SortingPage {...props} />}\n                />\n                <Redirect from={`${baseRoute}/*`} to={baseRoute} />\n              </Switch>\n            </main>\n          </Fragment>\n        </AlgorithmsProvider>\n      </ControlsProvider>\n    </DataProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}