{"version":3,"sources":["services/testData/data.js","algorithms/sort/selectionSort.js","algorithms/sort/insertionSort.js","algorithms/sort/mergeSort.js","algorithms/sort/bubbleSort.js","utils/sortUtils.js","utils/chartUtils.js","algorithms/sort/quickSort.js","algorithms/index.js","components/navBar/navBar.jsx","components/homePage/homePage.jsx","context/DataContext.js","components/common/chart.jsx","components/header/header.jsx","components/common/customSlider.jsx","components/options/options.jsx","components/startButton/startButton.jsx","components/controls/controls.jsx","components/algorithmsMenu/algorithmsMenu.jsx","components/sortingPage/sortingPage.jsx","components/common/load/load.jsx","components/searchingPage/searchingPage.jsx","App.js","index.js"],"names":["generateData","totalCount","data","count","_id","Math","random","toString","substr","y","floor","x","size","push","color","opacity","snapshots","swap","nums","idx1","idx2","temp","record","pNodes","sNodes","update","name","length","primaryNodes","_getFocusNodeIds","secondaryNodes","nodes","map","nodeIndex","mapChartData","a","iter","_getColor","_getOpacity","includes","_selectionSortSmall","start","end","minIdx","i","_selectionSortLarge","_insertionSort","j","_mergeSort","mid","_merge","_","range","leftStart","leftEnd","rightStart","rightEnd","leftCurrent","rightCurrent","index","slice","_quickSort","pivot","_partition","pivotIndex","indexOf","bubbleSort","_bubbleSort","curr","sorted","sort","algorithm","useStyles","makeStyles","theme","root","flexGrow","title","button","marginRight","spacing","textDecoration","NavBar","baseRoute","classes","className","AppBar","position","Toolbar","variant","to","Typography","Button","HomePage","props","id","type","DataContext","React","createContext","DataProvider","Provider","Consumer","Chart","useContext","hasMinimalData","options","colorType","colorDomain","colorRange","height","window","innerHeight","width","innerWidth","Grid","container","justify","labelAnchorX","getLabel","d","Header","selectedAlgorithm","ValueLabelComponent","children","open","value","Tooltip","enterTouchDelay","arrow","placement","CustomSlider","unit","onChange","maxValue","onSubmit","buttonLabel","label","style","onClick","Slider","max","defaultValue","aria-label","Options","formattedSpeed","speed","toFixed","speedTitle","dataCountTitle","dataCount","item","xs","handleChangeSpeed","handleChangeDataCount","StartButton","handleStart","isTimerSet","timer","startIcon","bottom","Controls","Container","controls","marginBottom","display","margin","AlgorithmsMenu","key","handleSetSelectedAlgorithm","SortingPage","Load","active","message","SearchingPage","App","useState","setSpeed","setTimer","setDataCount","setData","workingData","setWorkingData","recordSnapshots","setRecordSnapshots","setSelectedAlgorithm","resetTimer","clearTimeout","runAlgorithm","runVisualization","setTimeout","resetData","newData","mapped","handleReset","contextValue","find","exact","path","component","render","from","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bf139f96.chunk.js","sourcesContent":["export function generateData(totalCount) {\n  const data = [];\n  var count = 0;\n  while (count < totalCount) {\n    const _id = \"_\" + Math.random().toString(36).substr(2, 9);\n    const y = Math.floor(Math.random() * Math.floor(totalCount * 2)) + 1;\n    const x = count++;\n    const size = y;\n    const color = 0;\n    const opacity = 0.8;\n    data.push({ _id, x, y, size, color, opacity });\n  }\n\n  return data;\n}\n\nexport default {\n  generateData,\n};\n","import { swap } from \"../../utils/sortUtils\";\nimport { record } from \"../../utils/chartUtils\";\nimport _ from \"lodash\";\n\nlet snapshots;\n\nexport const selectionSort = (nums) => {\n  snapshots = [];\n  let data = [...nums];\n  data.length <= 300 ? _selectionSortSmall(data) : _selectionSortLarge(data);\n  snapshots = record(data, [], _.range(0, data.length), snapshots);\n  return { data, snapshots };\n};\n\nconst _selectionSortSmall = (data) => {\n  let start = 0;\n  let end = data.length - 1;\n  let minIdx = 0;\n  while (start <= end) {\n    minIdx = start;\n    for (let i = start; i <= end; i++) {\n      if (data[i].y < data[minIdx].y) minIdx = i;\n      snapshots = record(data, [minIdx], [i, start], snapshots);\n    }\n    data = swap(data, start, minIdx);\n    start++;\n  }\n};\n\nconst _selectionSortLarge = (data) => {\n  let start = 0;\n  let end = data.length - 1;\n  let minIdx = 0;\n\n  while (start <= end) {\n    snapshots = record(data, [minIdx], [start], snapshots);\n    minIdx = start;\n    for (let i = start; i <= end; i++) {\n      if (data[i].y < data[minIdx].y) {\n        minIdx = i;\n      }\n    }\n    data = swap(data, start, minIdx);\n    start++;\n  }\n};\n","import { swap } from \"../../utils/sortUtils\";\nimport { record } from \"../../utils/chartUtils\";\nimport _ from \"lodash\";\n\nlet snapshots;\n\nexport const insertionSort = (nums) => {\n  let data = [...nums];\n  snapshots = [];\n  _insertionSort(data);\n  snapshots = record(data, [], _.range(0, data.length), snapshots);\n  return { data, snapshots };\n};\n\nconst _insertionSort = (data) => {\n  snapshots = record(data, [], [], snapshots);\n  for (let i = 1; i < data.length; i++) {\n    snapshots = record(data, [], [i], snapshots);\n    for (let j = i; j > 0; j--) {\n      if (data[j].y < data[j - 1].y) {\n        snapshots = record(data, [j], [i, j - 1], snapshots);\n        data = swap(data, j, j - 1);\n        snapshots = record(data, [j - 1], [i, j], snapshots);\n      }\n    }\n  }\n};\n","import { record } from \"../../utils/chartUtils\";\nimport { swap } from \"../../utils/sortUtils\";\nimport _ from \"lodash\";\n\nlet snapshots;\n\nexport const mergeSort = (nums) => {\n  snapshots = [];\n  let data = [...nums];\n  _mergeSort(data, 0, data.length - 1);\n  snapshots = record(data, [], _.range(0, data.length), snapshots);\n  return { data, snapshots };\n};\n\nconst _mergeSort = (data, start, end) => {\n  const size = end - start + 1;\n  const mid = Math.floor(start + (end - start + 1) / 2);\n  snapshots = record(data, [mid], [], snapshots);\n  if (size > 2) {\n    _mergeSort(data, start, mid);\n    _mergeSort(data, mid + 1, end);\n    _merge(data, start, mid, mid + 1, end);\n    snapshots = record(data, [], _.range(start, end + 1), snapshots);\n  } else if (size === 2) {\n    snapshots = record(data, [start, end], [], snapshots);\n    if (data[start].y > data[end].y) swap(data, start, end);\n    snapshots = record(data, [start], [end], snapshots);\n  }\n};\n\nconst _merge = (data, leftStart, leftEnd, rightStart, rightEnd) => {\n  let temp = [];\n  let leftCurrent = leftStart;\n  let rightCurrent = rightStart;\n  let index = 0;\n\n  while (leftCurrent <= leftEnd && rightCurrent <= rightEnd) {\n    if (data[leftCurrent].y < data[rightCurrent].y) {\n      temp[index] = data[leftCurrent];\n      snapshots = record(\n        data,\n        [leftCurrent, rightCurrent],\n        _.range(leftStart, rightEnd + 1),\n        snapshots\n      );\n      leftCurrent++;\n    } else {\n      snapshots = record(\n        data,\n        [leftCurrent, rightCurrent],\n        _.range(leftStart, rightEnd + 1),\n        snapshots\n      );\n      temp[index] = data[rightCurrent];\n      rightCurrent++;\n    }\n    index++;\n  }\n\n  // add remaining values\n  temp = [\n    ...temp,\n    ...data.slice(leftCurrent, leftEnd + 1),\n    ...data.slice(rightCurrent, rightEnd + 1),\n  ];\n\n  index = leftStart;\n  for (let i = 0; i < temp.length; i++) {\n    data[index] = temp[i];\n    snapshots = record(\n      data,\n      [index],\n      _.range(leftStart, rightEnd + 1),\n      snapshots\n    );\n    index++;\n  }\n};\n","import { swap } from \"../../utils/sortUtils\";\nimport { record } from \"../../utils/chartUtils\";\nimport _ from \"lodash\";\n\nlet snapshots;\n\nexport const bubbleSort = (nums) => {\n  let data = [...nums];\n  snapshots = [];\n  _bubbleSort(data);\n  snapshots = record(data, [], _.range(data.length), snapshots);\n  return { data, snapshots };\n};\n\nconst _bubbleSort = (data) => {\n  let curr = 0;\n  let end = data.length - 1;\n  let sorted = false;\n\n  while (!sorted) {\n    sorted = true;\n    while (curr < end) {\n      if (data[curr].y > data[curr + 1].y) {\n        sorted = false;\n        snapshots = record(data, [curr + 1], [curr], snapshots);\n        data = swap(data, curr, curr + 1);\n        snapshots = record(data, [curr], [curr + 1], snapshots);\n      } else {\n        snapshots = record(data, [], [curr, curr + 1], snapshots);\n      }\n      curr++;\n    }\n    curr = 0;\n    end--;\n  }\n};\n","export const swap = (nums, idx1, idx2) => {\n  let temp = nums[idx1];\n  nums[idx1] = nums[idx2];\n  nums[idx2] = temp;\n  return nums;\n};\n\nexport default { swap };\n","export const record = (data, pNodes, sNodes, snapshots) => {\n  let update = [...snapshots];\n\n  update.push({\n    name: `Pass #${update.length}`,\n    data: [...data],\n    primaryNodes: _getFocusNodeIds(pNodes, data),\n    secondaryNodes: _getFocusNodeIds(sNodes, data),\n  });\n\n  return update;\n};\n\nconst _getFocusNodeIds = (nodes, data) => {\n  return nodes.map((nodeIndex) => data[nodeIndex]._id);\n};\n\nexport const mapChartData = async (snapshots) => {\n  return snapshots.map((iter) => {\n    let x = 0;\n    const { name, data } = iter;\n    const snapshot = data.map(({ _id, y }) => {\n      return {\n        _id: _id,\n        x: x++,\n        y: y,\n        size: y,\n        color: _getColor(_id, iter),\n        opacity: _getOpacity(_id, iter),\n      };\n    });\n    return { name, data: snapshot };\n  });\n};\n\nconst _getOpacity = (_id, iter) => {\n  const nodes = [...iter.primaryNodes, ...iter.secondaryNodes];\n  return nodes.includes(_id) ? 1 : 0.5;\n};\n\nconst _getColor = (_id, iter) => {\n  const { primaryNodes, secondaryNodes } = iter;\n  //red\n  if (primaryNodes.includes(_id)) return 2;\n  //blue\n  else if (secondaryNodes.includes(_id)) return 1;\n  else return 0; // orange\n};\n","import { swap } from \"../../utils/sortUtils\";\nimport { record } from \"../../utils/chartUtils\";\nimport _ from \"lodash\";\n\nlet snapshots = [];\nexport const quickSort = (nums) => {\n  snapshots = [];\n  let data = [...nums];\n  _quickSort(data, 0, data.length - 1);\n  snapshots = record(data, [], _.range(0, data.length), snapshots);\n  return { data, snapshots };\n};\n\nconst _quickSort = (data, start, end) => {\n  if (start >= end) {\n    return;\n  } else {\n    const pivot = data[Math.floor((start + end) / 2)];\n    const index = _partition(data, start, end, pivot);\n    _quickSort(data, start, index - 1);\n    _quickSort(data, index, end);\n  }\n};\n\nconst _partition = (data, start, end, pivot) => {\n  let pivotIndex = data.indexOf(pivot);\n  while (start <= end) {\n    pivotIndex = data.indexOf(pivot);\n    snapshots = record(data, [pivotIndex], [start, end], snapshots);\n    while (data[start].y < pivot.y) {\n      start++;\n      snapshots = record(data, [pivotIndex], [start, end], snapshots);\n    }\n    while (data[end].y > pivot.y) {\n      end--;\n      snapshots = record(data, [pivotIndex], [start, end], snapshots);\n    }\n    if (start <= end) {\n      snapshots = record(data, [pivotIndex], [start, end], snapshots);\n      swap(data, start, end);\n      pivotIndex = data.indexOf(pivot);\n      start++;\n      snapshots = record(data, [pivotIndex], [start, end], snapshots);\n      end--;\n    }\n  }\n  return start;\n};\n","import { selectionSort } from \"./sort/selectionSort\";\nimport { insertionSort } from \"./sort/insertionSort\";\nimport { mergeSort } from \"./sort/mergeSort\";\nimport { quickSort } from \"./sort/quickSort\";\nimport { bubbleSort } from \"./sort/bubbleSort\";\n\nexport const sort = [\n  {\n    _id: \"bubble_sort\",\n    name: \"BUBBLE SORT\",\n    algorithm: bubbleSort,\n  },\n  {\n    _id: \"selection_sort\",\n    name: \"SELECTION SORT\",\n    algorithm: selectionSort,\n  },\n  {\n    _id: \"insertion_sort\",\n    name: \"INSERTION SORT\",\n    algorithm: insertionSort,\n  },\n  {\n    _id: \"merge_sort\",\n    name: \"MERGE SORT\",\n    algorithm: mergeSort,\n  },\n  { _id: \"quick_sort\", name: \"QUICK SORT\", algorithm: quickSort },\n];\n\nexport const search = [\n  {\n    _id: \"linear_search\",\n    name: \"LINEAR SEARCH\",\n    algorithm: bubbleSort,\n  },\n  {\n    _id: \"binary_search\",\n    name: \"BINARY SEARCH\",\n    algorithm: bubbleSort,\n  },\n];\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppBar, Toolbar, Typography, Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: { flexGrow: 1, color: \"white\" },\n  button: {\n    marginRight: theme.spacing(1),\n    textDecoration: \"none\",\n    color: \"white\",\n  },\n}));\n\nfunction NavBar({ title }) {\n  const baseRoute = \"/algovisualizations\";\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar variant=\"dense\">\n          <NavLink to={baseRoute} className={classes.title}>\n            <Typography variant=\"h6\" color=\"inherit\">\n              {title}\n            </Typography>\n          </NavLink>\n          <NavLink to={`${baseRoute}/sorting`} className={classes.button}>\n            <Button color=\"inherit\">Sorting</Button>\n          </NavLink>\n          <NavLink to={`${baseRoute}/searching`} className={classes.button}>\n            <Button color=\"inherit\">Searching</Button>\n          </NavLink>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport { Loader } from \"react-loaders\";\nimport \"./homePage.scss\";\n\nfunction HomePage(props) {\n  return (\n    <div>\n      <Loader id=\"loader\" type=\"ball-pulse-rise\" />\n      <h1 id=\"welcome\">algovisualizations</h1>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from \"react\";\n\nconst DataContext = React.createContext();\n\nexport const DataProvider = DataContext.Provider;\nexport const DataConsumer = DataContext.Consumer;\n\nexport default DataContext;\n","import React, { useContext } from \"react\";\nimport { XYPlot, VerticalBarSeries, LabelSeries } from \"react-vis\";\nimport { Grid } from \"@material-ui/core\";\nimport DataContext from \"../../context/DataContext\";\n\nfunction Chart() {\n  const { data } = useContext(DataContext);\n  const hasMinimalData = data.length <= 40;\n  const options = {\n    colorType: \"category\",\n    colorDomain: [0, 1, 2, 4, 5, 6, 7],\n    colorRange: [\n      \"#3f51b5\",\n      \"orange\",\n      \"red\",\n      \"indigo\",\n      \"green\",\n      \"yellow\",\n      \"teal\",\n      \"darkblue\",\n    ],\n    height: window.innerHeight * 0.65,\n    width: window.innerWidth * 0.95,\n  };\n\n  const showDataLabels = () => (\n    <LabelSeries labelAnchorX=\"middle\" data={data} getLabel={(d) => d.y} />\n  );\n\n  return (\n    <Grid container justify=\"center\">\n      <XYPlot {...options}>\n        <VerticalBarSeries data={data} />\n        {hasMinimalData && showDataLabels()}\n      </XYPlot>\n    </Grid>\n  );\n}\n\nexport default Chart;\n","import React, { useContext } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport DataContext from \"../../context/DataContext\";\nfunction Header() {\n  const { selectedAlgorithm } = useContext(DataContext);\n  return (\n    <Typography className=\"chart-header\" variant=\"h3\">\n      {selectedAlgorithm.name}\n    </Typography>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { Slider, Tooltip, Grid, Typography, Button } from \"@material-ui/core\";\n\nfunction ValueLabelComponent(props) {\n  const { children, open, value } = props;\n\n  return (\n    <Tooltip\n      open={open}\n      enterTouchDelay={0}\n      title={value}\n      arrow={true}\n      placement=\"bottom\"\n    >\n      {children}\n    </Tooltip>\n  );\n}\n\nfunction CustomSlider({\n  title,\n  value,\n  unit,\n  onChange,\n  maxValue,\n  onSubmit,\n  buttonLabel,\n  label,\n}) {\n  return (\n    <Grid>\n      {title && (\n        <Typography variant=\"button\" style={{ color: \"#3f51b5\" }}>\n          {title}\n        </Typography>\n      )}\n      <Grid container justify=\"space-between\">\n        <Typography variant=\"h5\">\n          {label}\n          {unit}\n        </Typography>\n        {onSubmit && (\n          <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\n            {buttonLabel}\n          </Button>\n        )}\n      </Grid>\n      <Slider\n        ValueLabelComponent={ValueLabelComponent}\n        max={maxValue}\n        defaultValue={value}\n        value={value}\n        onChange={onChange}\n        aria-label=\"custom thumb label\"\n      />\n    </Grid>\n  );\n}\n\nexport default CustomSlider;\n","import React, { useContext } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport CustomSlider from \"../common/customSlider\";\nimport DataContext from \"../../context/DataContext\";\n\nfunction Options() {\n  const data = useContext(DataContext);\n  const maxDataCount = 120;\n  const formattedSpeed = (data.speed / 1000).toFixed(2);\n  const maxSpeed = 1500;\n  const speedTitle = `Speed (${formattedSpeed} sec)`;\n  const dataCountTitle = `Count (${data.dataCount})`;\n\n  return (\n    <Grid container justify=\"center\">\n      <Grid item xs={5}>\n        <CustomSlider\n          title={speedTitle}\n          maxValue={maxSpeed}\n          onChange={data.handleChangeSpeed}\n          value={data.speed}\n        />\n      </Grid>\n      <Grid item xs={1}></Grid>\n      <Grid item xs={5}>\n        <CustomSlider\n          title={dataCountTitle}\n          maxValue={maxDataCount}\n          onChange={data.handleChangeDataCount}\n          value={data.dataCount}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Options;\n","import React, { useContext } from \"react\";\nimport DataContext from \"../../context/DataContext\";\nimport { Button } from \"@material-ui/core\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport SwapHorizIcon from \"@material-ui/icons/SwapHoriz\";\n\nfunction StartButton() {\n  const { handleStart, timer } = useContext(DataContext);\n  const isTimerSet = timer > 0;\n\n  return (\n    <Button\n      variant=\"contained\"\n      color={isTimerSet ? \"default\" : \"secondary\"}\n      onClick={handleStart}\n      size=\"medium\"\n      startIcon={isTimerSet ? <SwapHorizIcon /> : <PlayCircleOutlineIcon />}\n    >\n      {isTimerSet ? \"STOP\" : \"START\"}\n    </Button>\n  );\n}\n\nexport default StartButton;\n","import React from \"react\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Options from \"../options/options\";\nimport StartButton from \"../startButton/startButton\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"fixed\",\n    bottom: theme.spacing(1),\n  },\n}));\n\nfunction Controls() {\n  const classes = useStyles();\n  return (\n    <Container className={classes.root}>\n      <Grid container className={classes.controls} justify=\"center\">\n        <Grid xs={6} item>\n          <Options id=\"options\" />\n        </Grid>\n        <Grid xs={2} item>\n          <StartButton id=\"startButton\" />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default Controls;\n","import React, { useContext } from \"react\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DataContext from \"../../context/DataContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginBottom: theme.spacing(0),\n  },\n  button: {\n    display: \"fixed\",\n    margin: theme.spacing(1),\n  },\n}));\n\nfunction AlgorithmsMenu() {\n  const data = useContext(DataContext);\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Grid container justify=\"space-evenly\">\n        {data.sort.map((item) => {\n          const { _id, name } = item;\n          const variant =\n            _id === data.selectedAlgorithm._id ? \"contained\" : \"outlined\";\n          return (\n            <Grid key={_id} item>\n              <Button\n                className={classes.options}\n                variant={variant}\n                color=\"primary\"\n                onClick={() => data.handleSetSelectedAlgorithm(_id)}\n              >\n                {name}\n              </Button>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </div>\n  );\n}\n\nexport default AlgorithmsMenu;\n","import React from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Chart from \"../common/chart\";\nimport Header from \"../header/header\";\nimport Controls from \"../controls/controls\";\nimport AlgorithmsMenu from \"../algorithmsMenu/algorithmsMenu\";\nimport \"./sortingPage.scss\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: theme.spacing(0),\n  },\n}));\n\nfunction SortingPage() {\n  const classes = useStyles();\n  return (\n    <Container id=\"pageContainer\" className={classes.root}>\n      <Header />\n      <Chart />\n      <AlgorithmsMenu />\n      <Controls />\n    </Container>\n  );\n}\n\nexport default SortingPage;\n","import React from \"react\";\nimport Loader from \"react-loaders\";\nimport \"./load.scss\";\nimport { Typography } from \"@material-ui/core\";\n\nfunction Load({ active, message }) {\n  return (\n    <div id=\"loader\">\n      <Loader type=\"ball-grid-pulse\" active={active} />\n      {message && (\n        <Typography variant=\"h4\" id=\"loaderMessage\">\n          {message}\n        </Typography>\n      )}\n    </div>\n  );\n}\n\nexport default Load;\n","import React from \"react\";\nimport Load from \"../common/load/load\";\n\nfunction SearchingPage() {\n  const message = \"Still working on this\";\n  return <Load active={true} message={message} />;\n}\n\nexport default SearchingPage;\n","import React, { Fragment, useState } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport { generateData } from \"./services/testData/data\";\nimport { sort } from \"./algorithms/index\";\nimport { mapChartData } from \"./utils/chartUtils\";\n\nimport NavBar from \"./components/navBar/navBar\";\nimport HomePage from \"./components/homePage/homePage\";\nimport SortingPage from \"./components/sortingPage/sortingPage\";\nimport SearchingPage from \"./components/searchingPage/searchingPage\";\n\nimport { DataProvider } from \"./context/DataContext\";\n\nimport \"./App.scss\";\n\nfunction App() {\n  const [speed, setSpeed] = useState(100);\n  const [timer, setTimer] = useState(0);\n  const [dataCount, setDataCount] = useState(20);\n  const [data, setData] = useState(generateData(dataCount));\n  const [workingData, setWorkingData] = useState(data);\n  const [recordSnapshots, setRecordSnapshots] = useState([]);\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState(sort[0]);\n\n  const resetTimer = () => {\n    clearTimeout(timer);\n    setTimer(0);\n  };\n\n  const runAlgorithm = async () => {\n    const { snapshots } = selectedAlgorithm.algorithm(workingData);\n    return await mapChartData(snapshots);\n  };\n\n  const runVisualization = (snapshots, index) => {\n    setData(snapshots[index].data);\n    setTimer(\n      setTimeout(() => {\n        if (index < snapshots.length - 1) {\n          runVisualization(snapshots, index + 1);\n        }\n      }, speed)\n    );\n  };\n\n  const resetData = () => {\n    let newData = generateData(dataCount);\n    resetTimer();\n    setWorkingData(newData);\n    setData(newData);\n  };\n\n  const handleStart = async () => {\n    const notRunning = timer === 0;\n    if (notRunning) {\n      const noSnapshotsRecorded = recordSnapshots.length === 0;\n      if (noSnapshotsRecorded) {\n        const mapped = await runAlgorithm();\n        setRecordSnapshots(mapped);\n        runVisualization(mapped, 0);\n      } else {\n        runVisualization(recordSnapshots, 0);\n      }\n    } else {\n      handleReset();\n    }\n  };\n\n  const handleReset = () => {\n    resetTimer();\n    resetData();\n  };\n\n  const handleChangeSpeed = (_, value) => {\n    resetTimer();\n    setSpeed(value);\n  };\n\n  const handleSetSelectedAlgorithm = (_id) => {\n    const selectedAlgorithm = sort.find((item) => item._id === _id);\n    setSelectedAlgorithm(selectedAlgorithm);\n    resetTimer();\n    setData(workingData);\n    setRecordSnapshots([]);\n  };\n\n  const handleChangeDataCount = (_, value) => {\n    setDataCount(value);\n    resetData();\n    setRecordSnapshots([]);\n  };\n\n  const contextValue = {\n    data,\n    dataCount,\n    speed,\n    timer,\n    sort,\n    selectedAlgorithm,\n    handleStart,\n    handleChangeDataCount,\n    handleChangeSpeed,\n    handleSetSelectedAlgorithm,\n  };\n  const baseRoute = \"/algovisualizations\";\n  const title = \"algovisualizations\";\n\n  return (\n    <DataProvider value={contextValue}>\n      <Fragment>\n        <NavBar title={title} />\n        <main>\n          <Switch>\n            <Route exact path={baseRoute} component={() => <HomePage />} />\n            <Route\n              path={`${baseRoute}/searching`}\n              render={(props) => <SearchingPage {...props} />}\n            />\n            <Route\n              path={`${baseRoute}/sorting`}\n              render={(props) => <SortingPage {...props} />}\n            />\n            <Redirect from={`${baseRoute}/*`} to={baseRoute} />\n          </Switch>\n        </main>\n      </Fragment>\n    </DataProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}