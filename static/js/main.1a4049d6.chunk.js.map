{"version":3,"sources":["services/testData/data.js","algorithms/sort/selectionSort.js","algorithms/sort/insertionSort.js","algorithms/sort/mergeSort.js","algorithms/sort/bubbleSort.js","utils/sortUtils.js","utils/chartUtils.js","algorithms/sort/quickSort.js","algorithms/index.js","components/navBar.jsx","components/homePage/homePage.jsx","components/common/chart.jsx","components/algorithmsMenu.jsx","components/common/customSlider.jsx","components/options.jsx","components/sortingPage/sortingPage.jsx","components/common/load/load.jsx","components/searchingPage/searchingPage.jsx","App.js","index.js"],"names":["generateData","totalCount","data","count","_id","Math","random","toString","substr","y","floor","x","size","push","color","opacity","snapshots","swap","nums","idx1","idx2","temp","record","pNodes","sNodes","update","name","length","primaryNodes","_getFocusNodeIds","secondaryNodes","nodes","map","nodeIndex","_getOpacity","iter","includes","_getColor","_selectionSortSmall","start","end","minIdx","i","_selectionSortLarge","_insertionSort","j","_mergeSort","mid","_merge","_","range","leftStart","leftEnd","rightStart","rightEnd","leftCurrent","rightCurrent","index","slice","_quickSort","pivot","_partition","pivotIndex","indexOf","bubbleSort","_bubbleSort","curr","sorted","sort","algorithm","useStyles","makeStyles","theme","root","flexGrow","title","button","marginRight","spacing","textDecoration","NavBar","baseRoute","classes","className","AppBar","position","Toolbar","variant","to","Typography","Button","HomePage","props","id","type","Chart","hasMinimalData","options","colorType","colorDomain","colorRange","height","width","window","innerWidth","Grid","container","justify","labelAnchorX","getLabel","d","marginBottom","margin","AlgorithmsMenu","selectedAlgorithm","algorithms","onSetSelectedAlgorithm","onStart","timer","isTimerSet","item","key","onClick","startIcon","ValueLabelComponent","children","open","value","Tooltip","enterTouchDelay","arrow","placement","CustomSlider","unit","onChange","maxValue","onSubmit","buttonLabel","label","style","Slider","max","defaultValue","aria-label","Options","onChangeSpeed","speed","dataCount","onChangeDataCount","formattedSpeed","toFixed","speedTitle","dataCountTitle","xs","sm","bottom","SortingPage","Container","Fragment","Load","active","message","SearchingPage","App","useState","setSpeed","setTimer","setDataCount","setData","workingData","setWorkingData","setSelectedAlgorithm","resetTimer","clearTimeout","runAlgorithm","mapped","mapChartData","runVisualization","setTimeout","handleStart","resetData","handleChangeSpeed","handleSetSelectedAlgorithm","find","handleChangeDataCount","newData","exact","path","component","render","from","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1a4049d6.chunk.js","sourcesContent":["export function generateData(totalCount) {\n  const data = [];\n  var count = 0;\n  while (count < totalCount) {\n    const _id = \"_\" + Math.random().toString(36).substr(2, 9);\n    const y = Math.floor(Math.random() * Math.floor(totalCount * 2)) + 1;\n    const x = count++;\n    const size = y;\n    const color = 0;\n    const opacity = 0.8;\n    data.push({ _id, x, y, size, color, opacity });\n  }\n\n  return data;\n}\n\nexport default {\n  generateData,\n};\n","import { swap } from \"../../utils/sortUtils\";\nimport { record } from \"../../utils/chartUtils\";\nimport _ from \"lodash\";\n\nlet snapshots;\n\nexport const selectionSort = (nums) => {\n  snapshots = [];\n  let data = [...nums];\n  data.length < 100 ? _selectionSortSmall(data) : _selectionSortLarge(data);\n  snapshots = record(data, [], _.range(0, data.length), snapshots);\n  return { data, snapshots };\n};\n\nconst _selectionSortSmall = (data) => {\n  let start = 0;\n  let end = data.length - 1;\n  let minIdx = 0;\n  while (start <= end) {\n    minIdx = start;\n    for (let i = start; i <= end; i++) {\n      if (data[i].y < data[minIdx].y) minIdx = i;\n      snapshots = record(data, [minIdx], [i, start], snapshots);\n    }\n    data = swap(data, start, minIdx);\n    start++;\n  }\n};\n\nconst _selectionSortLarge = (data) => {\n  let start = 0;\n  let end = data.length - 1;\n  let minIdx = 0;\n\n  while (start <= end) {\n    snapshots = record(data, [minIdx], [start], snapshots);\n    minIdx = start;\n    for (let i = start; i <= end; i++) {\n      if (data[i].y < data[minIdx].y) {\n        minIdx = i;\n      }\n    }\n    data = swap(data, start, minIdx);\n    start++;\n  }\n};\n","import { swap } from \"../../utils/sortUtils\";\nimport { record } from \"../../utils/chartUtils\";\nimport _ from \"lodash\";\n\nlet snapshots;\n\nexport const insertionSort = (nums) => {\n  let data = [...nums];\n  snapshots = [];\n  _insertionSort(data);\n  snapshots = record(data, [], _.range(0, data.length), snapshots);\n  return { data, snapshots };\n};\n\nconst _insertionSort = (data) => {\n  snapshots = record(data, [], [], snapshots);\n  for (let i = 1; i < data.length; i++) {\n    snapshots = record(data, [], [i], snapshots);\n    for (let j = i; j > 0; j--) {\n      if (data[j].y < data[j - 1].y) {\n        snapshots = record(data, [j], [i, j - 1], snapshots);\n        data = swap(data, j, j - 1);\n        snapshots = record(data, [j - 1], [i, j], snapshots);\n      }\n    }\n  }\n};\n","import { record } from \"../../utils/chartUtils\";\nimport { swap } from \"../../utils/sortUtils\";\nimport _ from \"lodash\";\n\nlet snapshots;\n\nexport const mergeSort = (nums) => {\n  snapshots = [];\n  let data = [...nums];\n  _mergeSort(data, 0, data.length - 1);\n  snapshots = record(data, [], _.range(0, data.length), snapshots);\n  return { data, snapshots };\n};\n\nconst _mergeSort = (data, start, end) => {\n  const size = end - start + 1;\n  const mid = Math.floor(start + (end - start + 1) / 2);\n  snapshots = record(data, [mid], [], snapshots);\n  if (size > 2) {\n    _mergeSort(data, start, mid);\n    _mergeSort(data, mid + 1, end);\n    _merge(data, start, mid, mid + 1, end);\n    snapshots = record(data, [], _.range(start, end + 1), snapshots);\n  } else if (size === 2) {\n    snapshots = record(data, [start, end], [], snapshots);\n    if (data[start].y > data[end].y) swap(data, start, end);\n    snapshots = record(data, [start], [end], snapshots);\n  }\n};\n\nconst _merge = (data, leftStart, leftEnd, rightStart, rightEnd) => {\n  let temp = [];\n  let leftCurrent = leftStart;\n  let rightCurrent = rightStart;\n  let index = 0;\n\n  while (leftCurrent <= leftEnd && rightCurrent <= rightEnd) {\n    if (data[leftCurrent].y < data[rightCurrent].y) {\n      temp[index] = data[leftCurrent];\n      snapshots = record(\n        data,\n        [leftCurrent, rightCurrent],\n        _.range(leftStart, rightEnd + 1),\n        snapshots\n      );\n      leftCurrent++;\n    } else {\n      snapshots = record(\n        data,\n        [leftCurrent, rightCurrent],\n        _.range(leftStart, rightEnd + 1),\n        snapshots\n      );\n      temp[index] = data[rightCurrent];\n      rightCurrent++;\n    }\n    index++;\n  }\n\n  // add remaining values\n  temp = [\n    ...temp,\n    ...data.slice(leftCurrent, leftEnd + 1),\n    ...data.slice(rightCurrent, rightEnd + 1),\n  ];\n\n  index = leftStart;\n  for (let i = 0; i < temp.length; i++) {\n    data[index] = temp[i];\n    snapshots = record(\n      data,\n      [index],\n      _.range(leftStart, rightEnd + 1),\n      snapshots\n    );\n    index++;\n  }\n};\n","import { swap } from \"../../utils/sortUtils\";\nimport { record } from \"../../utils/chartUtils\";\nimport _ from \"lodash\";\n\nlet snapshots;\n\nexport const bubbleSort = (nums) => {\n  let data = [...nums];\n  snapshots = [];\n  _bubbleSort(data);\n  snapshots = record(data, [], _.range(data.length), snapshots);\n  return { data, snapshots };\n};\n\nconst _bubbleSort = (data) => {\n  let curr = 0;\n  let end = data.length - 1;\n  let sorted = false;\n\n  while (!sorted) {\n    sorted = true;\n    while (curr < end) {\n      if (data[curr].y > data[curr + 1].y) {\n        sorted = false;\n        snapshots = record(data, [curr + 1], [curr], snapshots);\n        data = swap(data, curr, curr + 1);\n        snapshots = record(data, [curr], [curr + 1], snapshots);\n      } else {\n        snapshots = record(data, [], [curr, curr + 1], snapshots);\n      }\n      curr++;\n    }\n    curr = 0;\n    end--;\n  }\n};\n","export const swap = (nums, idx1, idx2) => {\n  let temp = nums[idx1];\n  nums[idx1] = nums[idx2];\n  nums[idx2] = temp;\n  return nums;\n};\n\nexport default { swap };\n","export const record = (data, pNodes, sNodes, snapshots) => {\n  let update = [...snapshots];\n\n  update.push({\n    name: `Pass #${update.length}`,\n    data: [...data],\n    primaryNodes: _getFocusNodeIds(pNodes, data),\n    secondaryNodes: _getFocusNodeIds(sNodes, data),\n  });\n\n  return update;\n};\n\nconst _getFocusNodeIds = (nodes, data) => {\n  return nodes.map((nodeIndex) => data[nodeIndex]._id);\n};\n\nexport const mapChartData = (snapshots) => {\n  return snapshots.map((iter) => {\n    let x = 0;\n    const { name, data } = iter;\n    const snapshot = data.map(({ _id, y }) => {\n      return {\n        _id: _id,\n        x: x++,\n        y: y,\n        size: y,\n        color: _getColor(_id, iter),\n        opacity: _getOpacity(_id, iter),\n      };\n    });\n    return { name, data: snapshot };\n  });\n};\n\nconst _getOpacity = (_id, iter) => {\n  const nodes = [...iter.primaryNodes, ...iter.secondaryNodes];\n  return nodes.includes(_id) ? 1 : 0.5;\n};\n\nconst _getColor = (_id, iter) => {\n  const { primaryNodes, secondaryNodes } = iter;\n  //red\n  if (primaryNodes.includes(_id)) return 2;\n  //blue\n  else if (secondaryNodes.includes(_id)) return 1;\n  else return 0; // orange\n};\n","import { swap } from \"../../utils/sortUtils\";\nimport { record } from \"../../utils/chartUtils\";\nimport _ from \"lodash\";\n\nlet snapshots = [];\nexport const quickSort = (nums) => {\n  snapshots = [];\n  let data = [...nums];\n  _quickSort(data, 0, data.length - 1);\n  snapshots = record(data, [], _.range(0, data.length), snapshots);\n  return { data, snapshots };\n};\n\nconst _quickSort = (data, start, end) => {\n  if (start >= end) {\n    return;\n  } else {\n    const pivot = data[Math.floor((start + end) / 2)];\n    const index = _partition(data, start, end, pivot);\n    _quickSort(data, start, index - 1);\n    _quickSort(data, index, end);\n  }\n};\n\nconst _partition = (data, start, end, pivot) => {\n  let pivotIndex = data.indexOf(pivot);\n  while (start <= end) {\n    pivotIndex = data.indexOf(pivot);\n    snapshots = record(data, [pivotIndex], [start, end], snapshots);\n    while (data[start].y < pivot.y) {\n      start++;\n      snapshots = record(data, [pivotIndex], [start, end], snapshots);\n    }\n    while (data[end].y > pivot.y) {\n      end--;\n      snapshots = record(data, [pivotIndex], [start, end], snapshots);\n    }\n    if (start <= end) {\n      snapshots = record(data, [pivotIndex], [start, end], snapshots);\n      swap(data, start, end);\n      pivotIndex = data.indexOf(pivot);\n      start++;\n      snapshots = record(data, [pivotIndex], [start, end], snapshots);\n      end--;\n    }\n  }\n  return start;\n};\n","import { selectionSort } from \"./sort/selectionSort\";\nimport { insertionSort } from \"./sort/insertionSort\";\nimport { mergeSort } from \"./sort/mergeSort\";\nimport { quickSort } from \"./sort/quickSort\";\nimport { bubbleSort } from \"./sort/bubbleSort\";\n\nexport const sort = [\n  {\n    _id: \"bubble_sort\",\n    name: \"BUBBLE SORT\",\n    algorithm: bubbleSort,\n  },\n  {\n    _id: \"selection_sort\",\n    name: \"SELECTION SORT\",\n    algorithm: selectionSort,\n  },\n  {\n    _id: \"insertion_sort\",\n    name: \"INSERTION SORT\",\n    algorithm: insertionSort,\n  },\n  {\n    _id: \"merge_sort\",\n    name: \"MERGE SORT\",\n    algorithm: mergeSort,\n  },\n  { _id: \"quick_sort\", name: \"QUICK SORT\", algorithm: quickSort },\n];\n\nexport const search = [\n  {\n    _id: \"linear_search\",\n    name: \"LINEAR SEARCH\",\n    algorithm: bubbleSort,\n  },\n  {\n    _id: \"binary_search\",\n    name: \"BINARY SEARCH\",\n    algorithm: bubbleSort,\n  },\n];\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppBar, Toolbar, Typography, Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: { flexGrow: 1, color: \"white\" },\n  button: {\n    marginRight: theme.spacing(1),\n    textDecoration: \"none\",\n    color: \"white\",\n  },\n}));\n\nfunction NavBar({ title }) {\n  const baseRoute = \"/algovisualizations\";\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar variant=\"dense\">\n          <NavLink to={baseRoute} className={classes.title}>\n            <Typography variant=\"h6\" color=\"inherit\">\n              {title}\n            </Typography>\n          </NavLink>\n          <NavLink to={`${baseRoute}/sorting`} className={classes.button}>\n            <Button color=\"inherit\">Sorting</Button>\n          </NavLink>\n          <NavLink to={`${baseRoute}/searching`} className={classes.button}>\n            <Button color=\"inherit\">Searching</Button>\n          </NavLink>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport { Loader } from \"react-loaders\";\nimport \"./homePage.scss\";\n\nfunction HomePage(props) {\n  return (\n    <div>\n      <Loader id=\"loader\" type=\"ball-pulse-rise\" />\n      <h1 id=\"welcome\">algovisualizations</h1>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from \"react\";\nimport { XYPlot, VerticalBarSeries, LabelSeries } from \"react-vis\";\nimport { Grid } from \"@material-ui/core\";\n\nfunction Chart({ data }) {\n  const hasMinimalData = data.length <= 40;\n  const options = {\n    colorType: \"category\",\n    colorDomain: [0, 1, 2, 4, 5, 6, 7],\n    colorRange: [\n      \"#3f51b5\",\n      \"orange\",\n      \"red\",\n      \"indigo\",\n      \"green\",\n      \"yellow\",\n      \"teal\",\n      \"darkblue\",\n    ],\n    height: 500,\n    width: window.innerWidth * 0.95,\n  };\n\n  const showDataLabels = () => (\n    <LabelSeries labelAnchorX=\"middle\" data={data} getLabel={(d) => d.y} />\n  );\n\n  return (\n    <Grid container justify=\"center\">\n      <XYPlot {...options}>\n        <VerticalBarSeries data={data} />\n        {hasMinimalData && showDataLabels()}\n      </XYPlot>\n    </Grid>\n  );\n}\n\nexport default Chart;\n","import React from \"react\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport SwapHorizIcon from \"@material-ui/icons/SwapHoriz\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: theme.spacing(0),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nfunction AlgorithmsMenu({\n  selectedAlgorithm,\n  algorithms,\n  onSetSelectedAlgorithm,\n  onStart,\n  timer,\n}) {\n  const classes = useStyles();\n  const isTimerSet = timer > 0;\n  return (\n    <div className={classes.root}>\n      <Grid container justify=\"space-evenly\">\n        {algorithms.map((item) => {\n          const { _id, name } = item;\n          const variant =\n            _id === selectedAlgorithm._id ? \"contained\" : \"outlined\";\n          return (\n            <Grid key={_id} item>\n              <Button\n                className={classes.options}\n                variant={variant}\n                color=\"primary\"\n                onClick={() => onSetSelectedAlgorithm(_id)}\n              >\n                {name}\n              </Button>\n            </Grid>\n          );\n        })}\n        <Button\n          className={classes.options}\n          variant=\"contained\"\n          color={isTimerSet ? \"default\" : \"secondary\"}\n          onClick={onStart}\n          size=\"small\"\n          startIcon={isTimerSet ? <SwapHorizIcon /> : <PlayCircleOutlineIcon />}\n        >\n          {isTimerSet ? \"Reset\" : \"Start\"}\n        </Button>\n      </Grid>\n    </div>\n  );\n}\n\nexport default AlgorithmsMenu;\n","import React from \"react\";\nimport { Slider, Tooltip, Grid, Typography, Button } from \"@material-ui/core\";\n\nfunction ValueLabelComponent(props) {\n  const { children, open, value } = props;\n  return (\n    <Tooltip\n      open={open}\n      enterTouchDelay={0}\n      title={value}\n      arrow={true}\n      placement=\"bottom\"\n    >\n      {children}\n    </Tooltip>\n  );\n}\n\nfunction CustomSlider({\n  title,\n  value,\n  unit,\n  onChange,\n  maxValue,\n  onSubmit,\n  buttonLabel,\n  label,\n}) {\n  return (\n    <Grid>\n      {title && (\n        <Typography variant=\"button\" style={{ color: \"#3f51b5\" }}>\n          {title}\n        </Typography>\n      )}\n      <Grid container justify=\"space-between\">\n        <Typography variant=\"h5\">\n          {label}\n          {unit}\n        </Typography>\n        {onSubmit && (\n          <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\n            {buttonLabel}\n          </Button>\n        )}\n      </Grid>\n      <Slider\n        ValueLabelComponent={ValueLabelComponent}\n        max={maxValue}\n        defaultValue={value}\n        value={value}\n        onChange={onChange}\n        aria-label=\"custom thumb label\"\n      />\n    </Grid>\n  );\n}\n\nexport default CustomSlider;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport CustomSlider from \"./common/customSlider\";\n\nfunction Options({ onChangeSpeed, speed, dataCount, onChangeDataCount }) {\n  const maxDataCount = 300;\n  const formattedSpeed = (speed / 1000).toFixed(2);\n  const maxSpeed = 1500;\n  const speedTitle = `Speed (${formattedSpeed} sec)`;\n  const dataCountTitle = `Count (${dataCount})`;\n\n  return (\n    <Grid container justify=\"center\">\n      <Grid item xs={12} sm={5}>\n        <CustomSlider\n          title={speedTitle}\n          maxValue={maxSpeed}\n          onChange={onChangeSpeed}\n          value={speed}\n        />\n      </Grid>\n      <Grid item xs={1}></Grid>\n      <Grid item xs={12} sm={5}>\n        <CustomSlider\n          title={dataCountTitle}\n          maxValue={maxDataCount}\n          onChange={onChangeDataCount}\n          value={dataCount}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Options;\n","import React from \"react\";\nimport { Container, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Chart from \"../common/chart\";\nimport AlgorithmsMenu from \"../algorithmsMenu\";\nimport Options from \"../options\";\nimport \"./sortingPage.scss\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: theme.spacing(0),\n  },\n  options: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n  },\n}));\n\nfunction SortingPage({\n  data,\n  onStart,\n  onSetSelectedAlgorithm,\n  selectedAlgorithm,\n  algorithms,\n  timer,\n  speed,\n  dataCount,\n  onChangeSpeed,\n  onChangeDataCount,\n}) {\n  const classes = useStyles();\n  return (\n    <Container id=\"pageContainer\">\n      <React.Fragment>\n        <Typography className=\"chart-header\" variant=\"h3\">\n          {selectedAlgorithm.name}\n        </Typography>\n        <Chart id=\"chart\" data={data} />\n        <AlgorithmsMenu\n          selectedAlgorithm={selectedAlgorithm}\n          algorithms={algorithms}\n          onSetSelectedAlgorithm={onSetSelectedAlgorithm}\n          onStart={onStart}\n          timer={timer}\n        />\n        <Container className={classes.options}>\n          <Options\n            speed={speed}\n            dataCount={dataCount}\n            onChangeSpeed={onChangeSpeed}\n            onChangeDataCount={onChangeDataCount}\n          />\n        </Container>\n      </React.Fragment>\n    </Container>\n  );\n}\n\nexport default SortingPage;\n","import React from \"react\";\nimport Loader from \"react-loaders\";\nimport \"./load.scss\";\nimport { Typography } from \"@material-ui/core\";\n\nfunction Load({ active, message }) {\n  return (\n    <div id=\"loader\">\n      <Loader type=\"ball-grid-pulse\" active={active} />\n      {message && (\n        <Typography variant=\"h4\" id=\"loaderMessage\">\n          {message}\n        </Typography>\n      )}\n    </div>\n  );\n}\n\nexport default Load;\n","import React from \"react\";\nimport Load from \"../common/load/load\";\n\nfunction SearchingPage() {\n  const message = \"Still working on this\";\n  return <Load active={true} message={message} />;\n}\n\nexport default SearchingPage;\n","import React, { Fragment, useState } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport { generateData } from \"./services/testData/data\";\nimport { sort } from \"./algorithms/index\";\nimport { mapChartData } from \"./utils/chartUtils\";\n\nimport NavBar from \"./components/navBar\";\nimport HomePage from \"./components/homePage/homePage\";\nimport SortingPage from \"./components/sortingPage/sortingPage\";\nimport SearchingPage from \"./components/searchingPage/searchingPage\";\n\nimport \"./App.scss\";\n\nfunction App() {\n  const baseRoute = \"/algovisualizations\";\n  const title = \"algovisualizations\";\n  const [speed, setSpeed] = useState(100);\n  const [timer, setTimer] = useState(0);\n  const [dataCount, setDataCount] = useState(20);\n  const [data, setData] = useState(generateData(dataCount));\n  const [workingData, setWorkingData] = useState(data);\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState(sort[0]);\n\n  const resetTimer = () => {\n    clearTimeout(timer);\n    setTimer(0);\n  };\n\n  const runAlgorithm = () => {\n    const { snapshots } = selectedAlgorithm.algorithm(workingData);\n    const mapped = mapChartData(snapshots);\n    runVisualization(mapped, 0);\n  };\n\n  const runVisualization = (snapshots, index) => {\n    setData(snapshots[index].data);\n    setTimer(\n      setTimeout(() => {\n        if (index < snapshots.length - 1) {\n          runVisualization(snapshots, index + 1);\n        }\n      }, speed)\n    );\n  };\n\n  const handleStart = () => {\n    if (timer === 0) {\n      runAlgorithm();\n    } else {\n      resetTimer();\n      resetData();\n    }\n  };\n\n  const handleChangeSpeed = (_, value) => {\n    resetTimer();\n    setSpeed(value);\n  };\n\n  const handleSetSelectedAlgorithm = (_id) => {\n    const selectedAlgorithm = sort.find((item) => item._id === _id);\n    setSelectedAlgorithm(selectedAlgorithm);\n    resetTimer();\n    setData(workingData);\n  };\n\n  const handleChangeDataCount = (_, value) => {\n    setDataCount(value);\n    resetData();\n  };\n\n  const resetData = () => {\n    let newData = generateData(dataCount);\n    resetTimer();\n    setWorkingData(newData);\n    setData(workingData);\n  };\n\n  return (\n    <Fragment>\n      <NavBar title={title} />\n      <main>\n        <Switch>\n          <Route exact path={baseRoute} component={() => <HomePage />} />\n          <Route\n            path={`${baseRoute}/searching`}\n            render={(props) => <SearchingPage {...props} />}\n          />\n          <Route\n            path={`${baseRoute}/sorting`}\n            render={(props) => (\n              <SortingPage\n                data={data}\n                selectedAlgorithm={selectedAlgorithm}\n                algorithms={sort}\n                timer={timer}\n                speed={speed}\n                dataCount={dataCount}\n                onStart={handleStart}\n                onChangeSpeed={handleChangeSpeed}\n                onChangeDataCount={handleChangeDataCount}\n                onSetSelectedAlgorithm={handleSetSelectedAlgorithm}\n                {...props}\n              />\n            )}\n          />\n          <Redirect from={`${baseRoute}/*`} to={baseRoute} />\n        </Switch>\n      </main>\n      )\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}