{"version":3,"sources":["services/testData/data.js","utils/sortUtils.js","utils/chartUtils.js","algorithms/selectionSort.js","algorithms/mergeSort.js","algorithms/insertionSort.js","components/common/chart.jsx","components/common/customMenu.jsx","components/sortingPage/sortMenu.jsx","components/common/customSlider.jsx","components/sortingPage/sortOptions.jsx","algorithms/quickSort.js","components/sortingPage/sortingPage.jsx","algorithms/bubbleSort.js","utils/algorithmUtil.js","components/navbar.jsx","App.js","index.js"],"names":["generateData","totalCount","data","count","_id","Math","random","toString","substr","y","floor","x","push","swap","nums","idx1","idx2","temp","record","nodes","snapshots","snapshot","focusNodes","_getFocusNodes","name","length","map","item","_selectionSortSmall","start","end","minIdx","i","_selectionSortLarge","_mergeSort","size","mid","_merge","leftStart","leftEnd","rightStart","rightEnd","leftCurrent","rightCurrent","index","slice","Chart","Grid","container","justify","height","width","window","innerWidth","colorType","colorRange","style","fontSize","fontWeight","labelAnchorX","getLabel","d","CustomMenu","options","onSelect","useState","anchorEl","setAnchorEl","handleClose","Fragment","Button","variant","color","aria-controls","aria-haspopup","onClick","event","currentTarget","startIcon","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","key","SortMenu","selectedAlgorithm","algorithms","onSetSelectedAlgorithm","onStart","Typography","Box","ml","ValueLabelComponent","props","children","value","Tooltip","enterTouchDelay","title","arrow","placement","CustomSlider","onChange","maxValue","onSubmit","buttonLabel","Slider","max","defaultValue","aria-label","SortOptions","onChangeSpeed","speed","dataCount","onChangeDataCount","onSetDataCount","_quickSort","pivot","_partition","algorithm","current","sorted","j","SortingPage","setDataCount","setData","setSpeed","setSelectedAlgorithm","timer","setTimer","setComparisons","stopTimer","clearTimeout","reset","xs","sm","_","align","find","visualize","setTimeout","iter","includes","opacity","useStyles","makeStyles","theme","root","flexGrow","marginBottom","spacing","menuButton","Navbar","classes","className","AppBar","position","Toolbar","App","Container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7f28ff9.chunk.js","sourcesContent":["export function generateData(totalCount) {\n  const data = [];\n  var count = 0;\n\n  while (count < totalCount) {\n    const _id = \"_\" + Math.random().toString(36).substr(2, 9);\n    const y = Math.floor(Math.random() * Math.floor(totalCount)) + 1;\n    const x = count++;\n    data.push({ _id, x, y });\n  }\n\n  return data;\n}\n\nexport default {\n  generateData,\n};\n","export const swap = (nums, idx1, idx2) => {\n  let temp = nums[idx1];\n  nums[idx1] = nums[idx2];\n  nums[idx2] = temp;\n  return nums;\n};\n\nexport default { swap };\n","export const record = (data, nodes, snapshots) => {\n  const snapshot = [...data];\n  const focusNodes = _getFocusNodes(nodes);\n  const name = `Pass #${snapshots.length}`;\n  const record = [\n    {\n      name,\n      snapshot,\n      focusNodes,\n    },\n  ];\n  return [...snapshots, ...record];\n};\n\nexport const mapChartData = (snapshots) => {\n  return snapshots.map((iter) => {\n    let x = 0;\n    const name = iter.name;\n    const snapshot = iter.snapshot.map((data) => {\n      return {\n        _id: data._id,\n        x: x++,\n        y: data.y,\n        size: data.y,\n        color: iter.focusNodes.includes(data._id) ? 255 : 150,\n        opacity: iter.focusNodes.includes(data._id) ? 1 : 0.5,\n      };\n    });\n    return { name, snapshot };\n  });\n};\n\nconst _getFocusNodes = (data) => {\n  return data.map((item) => {\n    if (item) return item._id;\n  });\n};\n","import { swap } from \"../utils/sortUtils\";\nimport { record } from \"../utils/chartUtils\";\n\nlet snapshots = [];\n\nexport const selectionSort = (nums) => {\n  return nums.length < 100\n    ? _selectionSortSmall(nums)\n    : _selectionSortLarge(nums);\n};\n\nconst _selectionSortSmall = (nums) => {\n  let data = [...nums];\n  let start = 0;\n  let end = nums.length - 1;\n  let minIdx = 0;\n\n  while (start <= end) {\n    minIdx = start;\n    for (let i = start; i <= end; i++) {\n      if (data[i].y < data[minIdx].y) minIdx = i;\n\n      snapshots = record(data, [data[minIdx], data[i], data[start]], snapshots);\n    }\n    data = swap(data, start, minIdx);\n    start++;\n  }\n\n  snapshots = record(data, data, snapshots);\n  return { data, snapshots };\n};\n\nconst _selectionSortLarge = (nums) => {\n  let snapshots = [];\n  let data = [...nums];\n  let start = 0;\n  let end = nums.length - 1;\n  let minIdx = 0;\n\n  while (start <= end) {\n    minIdx = start;\n\n    for (let i = start; i <= end; i++) {\n      if (data[i].y < data[minIdx].y) {\n        minIdx = i;\n        snapshots = record(data, [data[start]._id, data[i]], snapshots);\n      }\n    }\n    data = swap(data, start, minIdx);\n    start++;\n  }\n  snapshots = record(data, data, snapshots);\n  return { data, snapshots };\n};\n","import { record } from \"../utils/chartUtils\";\nimport { swap } from \"../utils/sortUtils\";\n\nlet snapshots = [];\nlet data = [];\n\nexport const mergeSort = (nums) => {\n  data = [...nums];\n  _mergeSort(0, data.length - 1);\n  snapshots = record(data, data, snapshots);\n  return { data, snapshots };\n};\n\nconst _mergeSort = (start, end) => {\n  const size = end - start + 1;\n  const mid = Math.floor(start + (end - start + 1) / 2);\n  snapshots = record(data, [data[mid]], snapshots);\n  if (size > 2) {\n    _mergeSort(start, mid);\n    _mergeSort(mid + 1, end);\n    _merge(start, mid, mid + 1, end);\n  } else if (size === 2) {\n    if (data[start].y > data[end].y) swap(data, start, end);\n  }\n  snapshots = record(data, [data[mid]], snapshots);\n  return;\n};\n\nconst _merge = (leftStart, leftEnd, rightStart, rightEnd) => {\n  let temp = [];\n  let leftCurrent = leftStart;\n  let rightCurrent = rightStart;\n  let index = 0;\n\n  while (leftCurrent <= leftEnd && rightCurrent <= rightEnd) {\n    if (data[leftCurrent].y < data[rightCurrent].y) {\n      snapshots = record(\n        data,\n        [data[leftCurrent], data[rightCurrent]],\n        snapshots\n      );\n      temp[index] = data[leftCurrent];\n      leftCurrent++;\n    } else {\n      snapshots = record(\n        data,\n        [data[leftCurrent], data[rightCurrent]],\n        snapshots\n      );\n      temp[index] = data[rightCurrent];\n      rightCurrent++;\n    }\n    index++;\n  }\n\n  // add remaining values\n  temp = [\n    ...temp,\n    ...data.slice(leftCurrent, leftEnd + 1),\n    ...data.slice(rightCurrent, rightEnd + 1),\n  ];\n\n  index = leftStart;\n  for (let i = 0; i < temp.length; i++) {\n    data[index] = temp[i];\n    index++;\n  }\n\n  return;\n};\n","import { swap } from \"../utils/sortUtils\";\nimport { record } from \"../utils/chartUtils\";\n\nlet snapshots = [];\n\nexport const insertionSort = (nums) => {\n  let data = [...nums];\n  snapshots = record(data, data, snapshots);\n  for (let i = 1; i < data.length; i++)\n    for (let j = i; j > 0; j--) {\n      if (data[j].y < data[j - 1].y) {\n        data = swap(data, j, j - 1);\n      }\n      snapshots = record(data, [data[i], data[j], data[j - 1]], snapshots);\n    }\n  return { data, snapshots };\n};\n","import React from \"react\";\nimport { XYPlot, VerticalBarSeries, LabelSeries } from \"react-vis\";\nimport { Grid } from \"@material-ui/core\";\n\nfunction Chart({ data }) {\n  return (\n    <Grid container justify=\"center\">\n      <XYPlot height={500} width={window.innerWidth * 0.85} colorType=\"linear\">\n        <VerticalBarSeries data={data} colorRange={[\"darkblue\", \"orange\"]} />\n        {data.length <= 30 ? (\n          <LabelSeries\n            style={{\n              fontSize: \"1.5rem\",\n              fontWeight: \"bold\",\n            }}\n            labelAnchorX=\"middle\"\n            data={data}\n            getLabel={(d) => d.y}\n          />\n        ) : null}\n      </XYPlot>\n    </Grid>\n  );\n}\n\nexport default Chart;\n","import React, { useState } from \"react\";\nimport { Menu, MenuItem, Button } from \"@material-ui/core\";\nimport SwapHorizIcon from \"@material-ui/icons/SwapHoriz\";\n\nfunction CustomMenu({ options, name, onSelect }) {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleSelect = (_id) => {\n    onSelect(_id);\n    handleClose();\n  };\n\n  return (\n    <React.Fragment>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        aria-controls={name}\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        startIcon={<SwapHorizIcon />}\n      >\n        {name}\n      </Button>\n      <Menu\n        id={name}\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {options.map((item) => {\n          return (\n            <MenuItem key={item._id} onClick={() => handleSelect(item._id)}>\n              {item.name}\n            </MenuItem>\n          );\n        })}\n      </Menu>\n    </React.Fragment>\n  );\n}\n\nexport default CustomMenu;\n","import React from \"react\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport { Typography, Button, Box, Grid } from \"@material-ui/core\";\nimport CustomMenu from \"../common/customMenu\";\n\nfunction SortMenu({\n  selectedAlgorithm,\n  algorithms,\n  onSetSelectedAlgorithm,\n  onStart,\n}) {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h3\">{selectedAlgorithm.name}</Typography>\n      <Grid container justify=\"flex-end\">\n        <CustomMenu\n          options={algorithms}\n          onSelect={(_id) => onSetSelectedAlgorithm(_id)}\n          name=\"Algorithm\"\n        />\n        <Box ml={1}>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={onStart}\n            startIcon={<PlayCircleOutlineIcon />}\n          >\n            Start\n          </Button>\n        </Box>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default SortMenu;\n","import React from \"react\";\nimport { Slider, Tooltip, Grid, Typography, Button } from \"@material-ui/core\";\n\nfunction ValueLabelComponent(props) {\n  const { children, open, value } = props;\n  return (\n    <Tooltip\n      open={open}\n      enterTouchDelay={0}\n      title={value}\n      arrow={true}\n      placement=\"bottom\"\n    >\n      {children}\n    </Tooltip>\n  );\n}\n\nfunction CustomSlider({\n  title,\n  value,\n  onChange,\n  maxValue,\n  onSubmit,\n  buttonLabel,\n}) {\n  return (\n    <Grid>\n      {title && <Typography variant=\"button\">{title}</Typography>}\n      <Grid container justify=\"space-between\">\n        <Typography variant=\"h5\">{value}</Typography>\n        {onSubmit && (\n          <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\n            {buttonLabel}\n          </Button>\n        )}\n      </Grid>\n      <Slider\n        ValueLabelComponent={ValueLabelComponent}\n        max={maxValue}\n        defaultValue={value}\n        value={value}\n        onChange={onChange}\n        aria-label=\"custom thumb label\"\n      />\n    </Grid>\n  );\n}\n\nexport default CustomSlider;\n","import React from \"react\";\nimport CustomSlider from \"../common/customSlider\";\n\nfunction SortOptions({\n  onChangeSpeed,\n  speed,\n  dataCount,\n  onChangeDataCount,\n  onSetDataCount,\n}) {\n  const maxSpeed = 3000;\n  const maxDataCount = 300;\n  return (\n    <React.Fragment>\n      <CustomSlider\n        title=\"Visualization Speed\"\n        maxValue={maxSpeed}\n        onChange={onChangeSpeed}\n        value={speed}\n      />\n      <CustomSlider\n        title=\"Data Set Count\"\n        maxValue={maxDataCount}\n        onChange={onChangeDataCount}\n        onSubmit={onSetDataCount}\n        value={dataCount}\n        buttonLabel=\"Reset\"\n      />\n    </React.Fragment>\n  );\n}\n\nexport default SortOptions;\n","import { swap } from \"../utils/sortUtils\";\nimport { record } from \"../utils/chartUtils\";\n\nlet snapshots = [];\nexport const quickSort = (nums) => {\n  snapshots = [];\n  let data = [...nums];\n  _quickSort(data, 0, data.length - 1);\n  snapshots = record(data, data, snapshots);\n  return { data, snapshots };\n};\n\nconst _quickSort = (data, start, end) => {\n  snapshots = record(data, [], snapshots);\n  if (start >= end) {\n    return;\n  } else {\n    const pivot = data[Math.floor((start + end) / 2)];\n    const index = _partition(data, start, end, pivot);\n    _quickSort(data, start, index - 1);\n    _quickSort(data, index, end);\n  }\n};\n\nconst _partition = (data, start, end, pivot) => {\n  while (start <= end) {\n    while (data[start].y < pivot.y) {\n      start++;\n      snapshots = record(data, [data[start], pivot, data[end]], snapshots);\n    }\n    while (data[end].y > pivot.y) {\n      end--;\n      snapshots = record(data, [data[start], pivot, data[end]], snapshots);\n    }\n    if (start <= end) {\n      swap(data, start, end);\n      snapshots = record(data, [data[start], pivot, data[end]], snapshots);\n      start++;\n      snapshots = record(data, [data[start], pivot, data[end]], snapshots);\n      end--;\n      snapshots = record(data, [data[start], pivot, data[end]], snapshots);\n    }\n  }\n  return start;\n};\n","import React, { useState } from \"react\";\nimport { generateData } from \"../../services/testData/data\";\nimport { bubbleSort } from \"../../algorithms/bubbleSort\";\nimport { selectionSort } from \"../../algorithms/selectionSort\";\nimport { mergeSort } from \"../../algorithms/mergeSort\";\nimport { insertionSort } from \"../../algorithms/insertionSort\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport Chart from \"../common/chart\";\nimport SortMenu from \"../sortingPage/sortMenu\";\nimport SortOptions from \"./sortOptions\";\nimport { runAlgorithm } from \"../../utils/algorithmUtil\";\nimport { quickSort } from \"../../algorithms/quickSort\";\n\nconst algorithms = [\n  {\n    _id: \"bubble_sort\",\n    name: \"Bubble Sort\",\n    algorithm: bubbleSort,\n  },\n  {\n    _id: \"selection_sort\",\n    name: \"Selection Sort\",\n    algorithm: selectionSort,\n  },\n  {\n    _id: \"insertion_sort\",\n    name: \"Insertion Sort\",\n    algorithm: insertionSort,\n  },\n  {\n    _id: \"merge_sort\",\n    name: \"Merge Sort\",\n    algorithm: mergeSort,\n  },\n  { _id: \"quick_sort\", name: \"Quick Sort\", algorithm: quickSort },\n];\n\nfunction SortingPage() {\n  const [dataCount, setDataCount] = useState(10);\n  const [data, setData] = useState(generateData(dataCount));\n  const [speed, setSpeed] = useState(200);\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState(algorithms[4]);\n  const [timer, setTimer] = useState(0);\n  const [comparisons, setComparisons] = useState(0);\n\n  const visualize = (snapshots, index) => {\n    setComparisons(index);\n    const { snapshot } = snapshots[index];\n    setData(snapshot);\n\n    setTimer(\n      setTimeout(() => {\n        if (index < snapshots.length - 1) {\n          visualize(snapshots, index + 1);\n        }\n      }, speed)\n    );\n  };\n\n  const stopTimer = () => clearTimeout(timer);\n\n  const handleStart = () => {\n    stopTimer();\n    const iter = runAlgorithm(selectedAlgorithm.algorithm, data);\n    visualize(iter, 0);\n  };\n\n  const handleChangeDataCount = (_, value) => {\n    stopTimer();\n    setDataCount(value);\n  };\n\n  const handleSetDataCount = () => {\n    stopTimer();\n    reset();\n  };\n\n  const handleSetSelectedAlgorithm = (_id) => {\n    stopTimer();\n    const selectedAlgorithm = algorithms.find((item) => item._id === _id);\n    setSelectedAlgorithm(selectedAlgorithm);\n    reset();\n  };\n\n  const handleChangeSpeed = (_, value) => {\n    stopTimer();\n    setSpeed(value);\n  };\n\n  const reset = () => {\n    const data = generateData(dataCount);\n    setData(data);\n  };\n\n  return (\n    <React.Fragment>\n      <Chart data={data} />\n      <Grid container justify=\"space-between\">\n        <Grid item xs={12} sm={6}>\n          <SortOptions\n            onChangeSpeed={handleChangeSpeed}\n            speed={speed}\n            dataCount={dataCount}\n            onChangeDataCount={handleChangeDataCount}\n            onSetDataCount={handleSetDataCount}\n          />\n        </Grid>\n        <Grid item align=\"end\" xs={12} sm={6}>\n          <SortMenu\n            selectedAlgorithm={selectedAlgorithm}\n            algorithms={algorithms}\n            onSetSelectedAlgorithm={handleSetSelectedAlgorithm}\n            onStart={handleStart}\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default SortingPage;\n","import { swap } from \"../utils/sortUtils\";\nimport { record } from \"../utils/chartUtils\";\n\nexport const bubbleSort = (nums) => {\n  let data = [...nums];\n  let snapshots = [];\n  let current = 0;\n  let end = data.length - 1;\n  let sorted = false;\n\n  while (!sorted) {\n    sorted = true;\n    while (current < end) {\n      snapshots = record(data, [data[current], data[current + 1]], snapshots);\n      if (data[current].y > data[current + 1].y) {\n        data = swap(data, current, current + 1);\n        sorted = false;\n      }\n      current++;\n    }\n    current = 0;\n    end--;\n  }\n  snapshots = record(data, data, snapshots);\n  return { data, snapshots };\n};\n","import { mapChartData } from \"../utils/chartUtils\";\n\nexport const runAlgorithm = (algorithm, nums) => {\n  const { snapshots } = algorithm(nums);\n  return mapChartData(snapshots);\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: theme.spacing(2),\n  },\n  menuButton: {\n    marginBottom: theme.spacing(0),\n  },\n}));\n\nexport default function Navbar({ title }) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"sticky\">\n        <Toolbar variant=\"dense\">\n          <Typography variant=\"h6\" color=\"inherit\">\n            {title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport SortingPage from \"./components/sortingPage/sortingPage\";\nimport NavBar from \"./components/navbar\";\nimport { Container } from \"@material-ui/core\";\nimport \"./App.scss\";\n\nconst title = \"algovisualizations\";\n\nfunction App() {\n  return (\n    <main>\n      <NavBar title={title} />\n      <Container>\n        <SortingPage />\n      </Container>\n    </main>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}