{"version":3,"sources":["services/testData/data.js","algorithms/sort/selectionSort.js","algorithms/sort/insertionSort.js","algorithms/sort/mergeSort.js","algorithms/sort/bubbleSort.js","utils/chartUtils.js","utils/algorithmUtil.js","utils/sortUtils.js","algorithms/sort/quickSort.js","algorithms/index.js","components/navBar.jsx","components/homePage/homePage.jsx","components/common/chart.jsx","components/algorithmsMenu.jsx","components/common/customSlider.jsx","components/options.jsx","components/sortingPage/sortingPage.jsx","components/common/load/load.jsx","components/searchingPage/searchingPage.jsx","App.js","index.js"],"names":["generateData","totalCount","data","count","_id","Math","random","toString","substr","y","floor","x","size","push","color","opacity","snapshots","record","pNodes","sNodes","update","name","length","primaryNodes","_getFocusNodeIds","secondaryNodes","nodes","map","nodeIndex","mapChartData","iter","_getColor","_getOpacity","includes","runAlgorithm","algorithm","nums","a","swap","idx1","idx2","temp","_selectionSortSmall","start","end","minIdx","i","_selectionSortLarge","_insertionSort","j","_mergeSort","mid","_merge","_","range","leftStart","leftEnd","rightStart","rightEnd","leftCurrent","rightCurrent","index","slice","_quickSort","pivot","_partition","pivotIndex","indexOf","bubbleSort","_bubbleSort","curr","sorted","sort","useStyles","makeStyles","theme","root","flexGrow","title","button","marginRight","spacing","textDecoration","NavBar","classes","className","AppBar","position","Toolbar","variant","to","Typography","Button","HomePage","props","id","type","Chart","hasMinimalData","options","colorType","colorDomain","colorRange","height","width","window","innerWidth","Grid","container","justify","labelAnchorX","getLabel","d","marginBottom","margin","AlgorithmsMenu","selectedAlgorithm","algorithms","onSetSelectedAlgorithm","onStart","timer","isTimerSet","item","key","onClick","startIcon","ValueLabelComponent","children","open","value","Tooltip","enterTouchDelay","arrow","placement","CustomSlider","unit","onChange","maxValue","onSubmit","buttonLabel","label","style","Slider","max","defaultValue","aria-label","Options","onChangeSpeed","speed","dataCount","onChangeDataCount","formattedSpeed","toFixed","speedTitle","dataCountTitle","xs","sm","bottom","SortingPage","Container","Load","active","message","SearchingPage","Fragment","App","useState","setSpeed","setTimer","setDataCount","setData","workingData","setWorkingData","setSelectedAlgorithm","resetTimer","clearTimeout","resetData","newData","handleStart","then","runVisualization","setTimeout","catch","e","console","log","handleChangeSpeed","handleSetSelectedAlgorithm","find","handleChangeDataCount","exact","path","component","render","from","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0bd2b4be.chunk.js","sourcesContent":["export function generateData(totalCount) {\n  const data = [];\n  var count = 0;\n  while (count < totalCount) {\n    const _id = \"_\" + Math.random().toString(36).substr(2, 9);\n    const y = Math.floor(Math.random() * Math.floor(totalCount * 2)) + 1;\n    const x = count++;\n    const size = y;\n    const color = 0;\n    const opacity = 0.8;\n    data.push({ _id, x, y, size, color, opacity });\n  }\n\n  return data;\n}\n\nexport default {\n  generateData,\n};\n","import { swap } from \"../../utils/sortUtils\";\nimport { record } from \"../../utils/chartUtils\";\nimport _ from \"lodash\";\n\nlet snapshots;\n\nexport const selectionSort = (nums) => {\n  snapshots = [];\n  let data = [...nums];\n  data.length < 100 ? _selectionSortSmall(data) : _selectionSortLarge(data);\n  snapshots = record(data, [], _.range(0, data.length), snapshots);\n  return { data, snapshots };\n};\n\nconst _selectionSortSmall = (data) => {\n  let start = 0;\n  let end = data.length - 1;\n  let minIdx = 0;\n  while (start <= end) {\n    minIdx = start;\n    for (let i = start; i <= end; i++) {\n      if (data[i].y < data[minIdx].y) minIdx = i;\n      snapshots = record(data, [minIdx], [i, start], snapshots);\n    }\n    data = swap(data, start, minIdx);\n    start++;\n  }\n};\n\nconst _selectionSortLarge = (data) => {\n  let start = 0;\n  let end = data.length - 1;\n  let minIdx = 0;\n\n  while (start <= end) {\n    snapshots = record(data, [minIdx], [start], snapshots);\n    minIdx = start;\n    for (let i = start; i <= end; i++) {\n      if (data[i].y < data[minIdx].y) {\n        minIdx = i;\n      }\n    }\n    data = swap(data, start, minIdx);\n    start++;\n  }\n};\n","import { swap } from \"../../utils/sortUtils\";\nimport { record } from \"../../utils/chartUtils\";\nimport _ from \"lodash\";\n\nlet snapshots;\n\nexport const insertionSort = (nums) => {\n  let data = [...nums];\n  snapshots = [];\n  _insertionSort(data);\n  snapshots = record(data, [], _.range(0, data.length), snapshots);\n  return { data, snapshots };\n};\n\nconst _insertionSort = (data) => {\n  snapshots = record(data, [], [], snapshots);\n  for (let i = 1; i < data.length; i++) {\n    snapshots = record(data, [], [i], snapshots);\n    for (let j = i; j > 0; j--) {\n      if (data[j].y < data[j - 1].y) {\n        snapshots = record(data, [j], [i, j - 1], snapshots);\n        data = swap(data, j, j - 1);\n        snapshots = record(data, [j - 1], [i, j], snapshots);\n      }\n    }\n  }\n};\n","import { record } from \"../../utils/chartUtils\";\nimport { swap } from \"../../utils/sortUtils\";\nimport _ from \"lodash\";\n\nlet snapshots;\n\nexport const mergeSort = (nums) => {\n  snapshots = [];\n  let data = [...nums];\n  _mergeSort(data, 0, data.length - 1);\n  snapshots = record(data, [], _.range(0, data.length), snapshots);\n  return { data, snapshots };\n};\n\nconst _mergeSort = (data, start, end) => {\n  const size = end - start + 1;\n  const mid = Math.floor(start + (end - start + 1) / 2);\n  snapshots = record(data, [mid], [], snapshots);\n  if (size > 2) {\n    _mergeSort(data, start, mid);\n    _mergeSort(data, mid + 1, end);\n    _merge(data, start, mid, mid + 1, end);\n    snapshots = record(data, [], _.range(start, end + 1), snapshots);\n  } else if (size === 2) {\n    snapshots = record(data, [start, end], [], snapshots);\n    if (data[start].y > data[end].y) swap(data, start, end);\n    snapshots = record(data, [start], [end], snapshots);\n  }\n};\n\nconst _merge = (data, leftStart, leftEnd, rightStart, rightEnd) => {\n  let temp = [];\n  let leftCurrent = leftStart;\n  let rightCurrent = rightStart;\n  let index = 0;\n\n  while (leftCurrent <= leftEnd && rightCurrent <= rightEnd) {\n    if (data[leftCurrent].y < data[rightCurrent].y) {\n      temp[index] = data[leftCurrent];\n      snapshots = record(\n        data,\n        [leftCurrent, rightCurrent],\n        _.range(leftStart, rightEnd + 1),\n        snapshots\n      );\n      leftCurrent++;\n    } else {\n      snapshots = record(\n        data,\n        [leftCurrent, rightCurrent],\n        _.range(leftStart, rightEnd + 1),\n        snapshots\n      );\n      temp[index] = data[rightCurrent];\n      rightCurrent++;\n    }\n    index++;\n  }\n\n  // add remaining values\n  temp = [\n    ...temp,\n    ...data.slice(leftCurrent, leftEnd + 1),\n    ...data.slice(rightCurrent, rightEnd + 1),\n  ];\n\n  index = leftStart;\n  for (let i = 0; i < temp.length; i++) {\n    data[index] = temp[i];\n    snapshots = record(\n      data,\n      [index],\n      _.range(leftStart, rightEnd + 1),\n      snapshots\n    );\n    index++;\n  }\n};\n","import { swap } from \"../../utils/sortUtils\";\nimport { record } from \"../../utils/chartUtils\";\nimport _ from \"lodash\";\n\nlet snapshots;\n\nexport const bubbleSort = (nums) => {\n  let data = [...nums];\n  snapshots = [];\n  _bubbleSort(data);\n  snapshots = record(data, [], _.range(data.length), snapshots);\n  return { data, snapshots };\n};\n\nconst _bubbleSort = (data) => {\n  let curr = 0;\n  let end = data.length - 1;\n  let sorted = false;\n\n  while (!sorted) {\n    sorted = true;\n    while (curr < end) {\n      if (data[curr].y > data[curr + 1].y) {\n        sorted = false;\n        snapshots = record(data, [curr + 1], [curr], snapshots);\n        data = swap(data, curr, curr + 1);\n        snapshots = record(data, [curr], [curr + 1], snapshots);\n      } else {\n        snapshots = record(data, [], [curr, curr + 1], snapshots);\n      }\n      curr++;\n    }\n    curr = 0;\n    end--;\n  }\n};\n","export const record = (data, pNodes, sNodes, snapshots) => {\n  let update = [...snapshots];\n\n  update.push({\n    name: `Pass #${update.length}`,\n    data: [...data],\n    primaryNodes: _getFocusNodeIds(pNodes, data),\n    secondaryNodes: _getFocusNodeIds(sNodes, data),\n  });\n\n  return update;\n};\n\nconst _getFocusNodeIds = (nodes, data) => {\n  return nodes.map((nodeIndex) => data[nodeIndex]._id);\n};\n\nexport const mapChartData = (snapshots) => {\n  return snapshots.map((iter) => {\n    let x = 0;\n    const { name, data } = iter;\n    const snapshot = data.map(({ _id, y }) => {\n      return {\n        _id: _id,\n        x: x++,\n        y: y,\n        size: y,\n        color: _getColor(_id, iter),\n        opacity: _getOpacity(_id, iter),\n      };\n    });\n    return { name, data: snapshot };\n  });\n};\n\nconst _getOpacity = (_id, iter) => {\n  const nodes = [...iter.primaryNodes, ...iter.secondaryNodes];\n  return nodes.includes(_id) ? 1 : 0.5;\n};\n\nconst _getColor = (_id, iter) => {\n  const { primaryNodes, secondaryNodes } = iter;\n  //red\n  if (primaryNodes.includes(_id)) return 2;\n  //blue\n  else if (secondaryNodes.includes(_id)) return 1;\n  else return 0; // orange\n};\n","import { mapChartData } from \"../utils/chartUtils\";\n\nexport const runAlgorithm = async (algorithm, nums) => {\n  const { snapshots } = algorithm(nums);\n  return mapChartData(snapshots);\n};\n","export const swap = (nums, idx1, idx2) => {\n  let temp = nums[idx1];\n  nums[idx1] = nums[idx2];\n  nums[idx2] = temp;\n  return nums;\n};\n\nexport default { swap };\n","import { swap } from \"../../utils/sortUtils\";\nimport { record } from \"../../utils/chartUtils\";\nimport _ from \"lodash\";\n\nlet snapshots = [];\nexport const quickSort = (nums) => {\n  snapshots = [];\n  let data = [...nums];\n  _quickSort(data, 0, data.length - 1);\n  snapshots = record(data, [], _.range(0, data.length), snapshots);\n  return { data, snapshots };\n};\n\nconst _quickSort = (data, start, end) => {\n  if (start >= end) {\n    return;\n  } else {\n    const pivot = data[Math.floor((start + end) / 2)];\n    const index = _partition(data, start, end, pivot);\n    _quickSort(data, start, index - 1);\n    _quickSort(data, index, end);\n  }\n};\n\nconst _partition = (data, start, end, pivot) => {\n  let pivotIndex = data.indexOf(pivot);\n  while (start <= end) {\n    pivotIndex = data.indexOf(pivot);\n    snapshots = record(data, [pivotIndex], [start, end], snapshots);\n    while (data[start].y < pivot.y) {\n      start++;\n      snapshots = record(data, [pivotIndex], [start, end], snapshots);\n    }\n    while (data[end].y > pivot.y) {\n      end--;\n      snapshots = record(data, [pivotIndex], [start, end], snapshots);\n    }\n    if (start <= end) {\n      snapshots = record(data, [pivotIndex], [start, end], snapshots);\n      swap(data, start, end);\n      pivotIndex = data.indexOf(pivot);\n      start++;\n      snapshots = record(data, [pivotIndex], [start, end], snapshots);\n      end--;\n    }\n  }\n  return start;\n};\n","import { selectionSort } from \"./sort/selectionSort\";\nimport { insertionSort } from \"./sort/insertionSort\";\nimport { mergeSort } from \"./sort/mergeSort\";\nimport { quickSort } from \"./sort/quickSort\";\nimport { bubbleSort } from \"./sort/bubbleSort\";\n\nexport const sort = [\n  {\n    _id: \"bubble_sort\",\n    name: \"BUBBLE SORT\",\n    algorithm: bubbleSort,\n  },\n  {\n    _id: \"selection_sort\",\n    name: \"SELECTION SORT\",\n    algorithm: selectionSort,\n  },\n  {\n    _id: \"insertion_sort\",\n    name: \"INSERTION SORT\",\n    algorithm: insertionSort,\n  },\n  {\n    _id: \"merge_sort\",\n    name: \"MERGE SORT\",\n    algorithm: mergeSort,\n  },\n  { _id: \"quick_sort\", name: \"QUICK SORT\", algorithm: quickSort },\n];\n\nexport const search = [\n  {\n    _id: \"linear_search\",\n    name: \"LINEAR SEARCH\",\n    algorithm: bubbleSort,\n  },\n  {\n    _id: \"binary_search\",\n    name: \"BINARY SEARCH\",\n    algorithm: bubbleSort,\n  },\n];\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppBar, Toolbar, Typography, Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: { flexGrow: 1, color: \"white\" },\n  button: {\n    marginRight: theme.spacing(1),\n    textDecoration: \"none\",\n    color: \"white\",\n  },\n}));\n\nfunction NavBar({ title }) {\n  const classes = useStyles();\n  const root = \"/algovisualizations\";\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar variant=\"dense\">\n          <NavLink to={root} className={classes.title}>\n            <Typography variant=\"h6\" color=\"inherit\">\n              {title}\n            </Typography>\n          </NavLink>\n          <NavLink to={`${root}/sorting`} className={classes.button}>\n            <Button color=\"inherit\">Sorting</Button>\n          </NavLink>\n          <NavLink to={`${root}/searching`} className={classes.button}>\n            <Button color=\"inherit\">Searching</Button>\n          </NavLink>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport { Loader } from \"react-loaders\";\nimport \"./homePage.scss\";\n\nfunction HomePage(props) {\n  return (\n    <div>\n      <Loader id=\"loader\" type=\"ball-pulse-rise\" />\n      <h1 id=\"welcome\">algovisualizations</h1>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from \"react\";\nimport { XYPlot, VerticalBarSeries, LabelSeries } from \"react-vis\";\nimport { Grid } from \"@material-ui/core\";\n\nfunction Chart({ data }) {\n  const hasMinimalData = data.length <= 40;\n  const options = {\n    colorType: \"category\",\n    colorDomain: [0, 1, 2, 4, 5, 6, 7],\n    colorRange: [\n      \"#3f51b5\",\n      \"orange\",\n      \"red\",\n      \"indigo\",\n      \"green\",\n      \"yellow\",\n      \"teal\",\n      \"darkblue\",\n    ],\n    height: 500,\n    width: window.innerWidth * 0.95,\n  };\n\n  const showDataLabels = () => (\n    <LabelSeries labelAnchorX=\"middle\" data={data} getLabel={(d) => d.y} />\n  );\n\n  return (\n    <Grid container justify=\"center\">\n      <XYPlot {...options}>\n        <VerticalBarSeries data={data} />\n        {hasMinimalData && showDataLabels()}\n      </XYPlot>\n    </Grid>\n  );\n}\n\nexport default Chart;\n","import React from \"react\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport SwapHorizIcon from \"@material-ui/icons/SwapHoriz\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: theme.spacing(0),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nfunction AlgorithmsMenu({\n  selectedAlgorithm,\n  algorithms,\n  onSetSelectedAlgorithm,\n  onStart,\n  timer,\n}) {\n  const classes = useStyles();\n  const isTimerSet = timer > 0;\n  return (\n    <div className={classes.root}>\n      <Grid container justify=\"space-evenly\">\n        {algorithms.map((item) => {\n          const { _id, name } = item;\n          const variant =\n            _id === selectedAlgorithm._id ? \"contained\" : \"outlined\";\n          return (\n            <Grid key={_id} item>\n              <Button\n                className={classes.options}\n                variant={variant}\n                color=\"primary\"\n                onClick={() => onSetSelectedAlgorithm(_id)}\n              >\n                {name}\n              </Button>\n            </Grid>\n          );\n        })}\n        <Button\n          className={classes.options}\n          variant=\"contained\"\n          color={isTimerSet ? \"default\" : \"secondary\"}\n          onClick={onStart}\n          size=\"small\"\n          startIcon={isTimerSet ? <SwapHorizIcon /> : <PlayCircleOutlineIcon />}\n        >\n          {isTimerSet ? \"Reset\" : \"Start\"}\n        </Button>\n      </Grid>\n    </div>\n  );\n}\n\nexport default AlgorithmsMenu;\n","import React from \"react\";\nimport { Slider, Tooltip, Grid, Typography, Button } from \"@material-ui/core\";\n\nfunction ValueLabelComponent(props) {\n  const { children, open, value } = props;\n  return (\n    <Tooltip\n      open={open}\n      enterTouchDelay={0}\n      title={value}\n      arrow={true}\n      placement=\"bottom\"\n    >\n      {children}\n    </Tooltip>\n  );\n}\n\nfunction CustomSlider({\n  title,\n  value,\n  unit,\n  onChange,\n  maxValue,\n  onSubmit,\n  buttonLabel,\n  label,\n}) {\n  return (\n    <Grid>\n      {title && (\n        <Typography variant=\"button\" style={{ color: \"#3f51b5\" }}>\n          {title}\n        </Typography>\n      )}\n      <Grid container justify=\"space-between\">\n        <Typography variant=\"h5\">\n          {label}\n          {unit}\n        </Typography>\n        {onSubmit && (\n          <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\n            {buttonLabel}\n          </Button>\n        )}\n      </Grid>\n      <Slider\n        ValueLabelComponent={ValueLabelComponent}\n        max={maxValue}\n        defaultValue={value}\n        value={value}\n        onChange={onChange}\n        aria-label=\"custom thumb label\"\n      />\n    </Grid>\n  );\n}\n\nexport default CustomSlider;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport CustomSlider from \"./common/customSlider\";\n\nfunction Options({ onChangeSpeed, speed, dataCount, onChangeDataCount }) {\n  const maxDataCount = 1000;\n  const formattedSpeed = (speed / 1000).toFixed(2);\n  const maxSpeed = 1500;\n  const speedTitle = `Speed (${formattedSpeed} sec)`;\n  const dataCountTitle = `Count (${dataCount})`;\n\n  return (\n    <Grid container justify=\"center\">\n      <Grid item xs={12} sm={5}>\n        <CustomSlider\n          title={speedTitle}\n          maxValue={maxSpeed}\n          onChange={onChangeSpeed}\n          value={speed}\n        />\n      </Grid>\n      <Grid item xs={1}></Grid>\n      <Grid item xs={12} sm={5}>\n        <CustomSlider\n          title={dataCountTitle}\n          maxValue={maxDataCount}\n          onChange={onChangeDataCount}\n          value={dataCount}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Options;\n","import React from \"react\";\nimport { Container, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Chart from \"../common/chart\";\nimport AlgorithmsMenu from \"../algorithmsMenu\";\nimport Options from \"../options\";\nimport \"./sortingPage.scss\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: theme.spacing(0),\n  },\n  options: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n  },\n}));\n\nfunction SortingPage({\n  data,\n  onStart,\n  onSetSelectedAlgorithm,\n  selectedAlgorithm,\n  algorithms,\n  timer,\n\n  speed,\n  dataCount,\n  onChangeSpeed,\n  onChangeDataCount,\n}) {\n  const classes = useStyles();\n  return (\n    <Container id=\"pageContainer\">\n      <Typography className=\"chart-header\" variant=\"h3\">\n        {selectedAlgorithm.name}\n      </Typography>\n      <Chart id=\"chart\" data={data} />\n      <AlgorithmsMenu\n        selectedAlgorithm={selectedAlgorithm}\n        algorithms={algorithms}\n        onSetSelectedAlgorithm={onSetSelectedAlgorithm}\n        onStart={onStart}\n        timer={timer}\n      />\n      <Container className={classes.options}>\n        <Options\n          speed={speed}\n          dataCount={dataCount}\n          onChangeSpeed={onChangeSpeed}\n          onChangeDataCount={onChangeDataCount}\n        />\n      </Container>\n    </Container>\n  );\n}\n\nexport default SortingPage;\n","import React from \"react\";\nimport Loader from \"react-loaders\";\nimport \"./load.scss\";\nimport { Typography } from \"@material-ui/core\";\n\nfunction Load({ active, message }) {\n  return (\n    <div id=\"loader\">\n      {message && <Typography id=\"loaderMessage\">{message}</Typography>}\n      <Loader type=\"ball-grid-pulse\" active={active} />\n    </div>\n  );\n}\n\nexport default Load;\n","import React from \"react\";\nimport Load from \"../common/load/load\";\n\nfunction SearchingPage() {\n  const loadingMessage = \"Still working on this one\";\n  return (\n    <React.Fragment>\n      <Load active={true} message={loadingMessage} />\n    </React.Fragment>\n  );\n}\n\nexport default SearchingPage;\n","import React, { useState } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { generateData } from \"./services/testData/data\";\nimport { runAlgorithm } from \"./utils/algorithmUtil\";\nimport { sort } from \"./algorithms/index\";\n\nimport NavBar from \"./components/navBar\";\nimport HomePage from \"./components/homePage/homePage\";\nimport SortingPage from \"./components/sortingPage/sortingPage\";\nimport SearchingPage from \"./components/searchingPage/searchingPage\";\n\nimport \"./App.scss\";\n\nfunction App() {\n  const root = \"/algovisualizations\";\n  const appName = \"algovisualizations\";\n  const [speed, setSpeed] = useState(100);\n  const [timer, setTimer] = useState(0);\n  const [dataCount, setDataCount] = useState(20);\n  const [data, setData] = useState(generateData(dataCount));\n  const [workingData, setWorkingData] = useState(data);\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState(sort[0]);\n\n  const resetTimer = () => {\n    clearTimeout(timer);\n    setTimer(0);\n  };\n\n  const resetData = () => {\n    let newData = generateData(dataCount);\n    resetTimer();\n    setWorkingData(newData);\n    setData(workingData);\n  };\n\n  const runVisualization = (snapshots, index) => {\n    setData(snapshots[index].data);\n    setTimer(\n      setTimeout(() => {\n        if (index < snapshots.length - 1) {\n          runVisualization(snapshots, index + 1);\n        }\n      }, speed)\n    );\n  };\n\n  const handleStart = () => {\n    if (timer === 0) {\n      runAlgorithm(selectedAlgorithm.algorithm, workingData)\n        .then((snapshots) => runVisualization(snapshots, 0))\n        .catch((e) => console.log(e));\n    } else {\n      resetTimer();\n      resetData();\n    }\n  };\n\n  const handleChangeSpeed = (value) => {\n    resetTimer();\n    setSpeed(value);\n  };\n\n  const handleSetSelectedAlgorithm = (_id) => {\n    const selectedAlgorithm = sort.find((item) => item._id === _id);\n    setSelectedAlgorithm(selectedAlgorithm);\n    resetTimer();\n    setData(workingData);\n  };\n\n  const handleChangeDataCount = (value) => {\n    setDataCount(value);\n    resetData();\n  };\n\n  return (\n    <React.Fragment>\n      <NavBar title={appName} />\n      <main>\n        <Switch>\n          <Route exact path={root} component={() => <HomePage />} />\n          <Route\n            path={`${root}/searching`}\n            render={(props) => <SearchingPage {...props} />}\n          />\n          <Route\n            path={`${root}/sorting`}\n            render={(props) => (\n              <SortingPage\n                data={data}\n                selectedAlgorithm={selectedAlgorithm}\n                algorithms={sort}\n                onStart={handleStart}\n                onSetSelectedAlgorithm={handleSetSelectedAlgorithm}\n                timer={timer}\n                onChangeSpeed={handleChangeSpeed}\n                speed={speed}\n                dataCount={dataCount}\n                onChangeDataCount={handleChangeDataCount}\n              />\n            )}\n          />\n          <Redirect from={`${root}/*`} to={root} />\n        </Switch>\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}